

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 19 17:55:39 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=1
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 07/09/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1783 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0008                     bsr             equ	8
    76     0005                     fsr0h           equ	5
    77     0004                     fsr0l           equ	4
    78     0007                     fsr1h           equ	7
    79     0006                     fsr1l           equ	6
    80     0000                     indf            equ	0
    81     0000                     indf0           equ	0
    82     0001                     indf1           equ	1
    83     000B                     intcon          equ	11
    84     0002                     pc              equ	2
    85     0002                     pcl             equ	2
    86     000A                     pclath          equ	10
    87     0003                     status          equ	3
    88     0009                     wreg            equ	9
    89     0000                     INDF0           equ	0	;# 
    90     0001                     INDF1           equ	1	;# 
    91     0002                     PCL             equ	2	;# 
    92     0003                     STATUS          equ	3	;# 
    93     0004                     FSR0L           equ	4	;# 
    94     0005                     FSR0H           equ	5	;# 
    95     0006                     FSR1L           equ	6	;# 
    96     0007                     FSR1H           equ	7	;# 
    97     0008                     BSR             equ	8	;# 
    98     0009                     WREG            equ	9	;# 
    99     000A                     PCLATH          equ	10	;# 
   100     000B                     INTCON          equ	11	;# 
   101     000C                     PORTA           equ	12	;# 
   102     000D                     PORTB           equ	13	;# 
   103     000E                     PORTC           equ	14	;# 
   104     0010                     PORTE           equ	16	;# 
   105     0011                     PIR1            equ	17	;# 
   106     0012                     PIR2            equ	18	;# 
   107     0014                     PIR4            equ	20	;# 
   108     0015                     TMR0            equ	21	;# 
   109     0016                     TMR1            equ	22	;# 
   110     0016                     TMR1L           equ	22	;# 
   111     0017                     TMR1H           equ	23	;# 
   112     0018                     T1CON           equ	24	;# 
   113     0019                     T1GCON          equ	25	;# 
   114     001A                     TMR2            equ	26	;# 
   115     001B                     PR2             equ	27	;# 
   116     001C                     T2CON           equ	28	;# 
   117     008C                     TRISA           equ	140	;# 
   118     008D                     TRISB           equ	141	;# 
   119     008E                     TRISC           equ	142	;# 
   120     0090                     TRISE           equ	144	;# 
   121     0091                     PIE1            equ	145	;# 
   122     0092                     PIE2            equ	146	;# 
   123     0094                     PIE4            equ	148	;# 
   124     0095                     OPTION_REG      equ	149	;# 
   125     0096                     PCON            equ	150	;# 
   126     0097                     WDTCON          equ	151	;# 
   127     0098                     OSCTUNE         equ	152	;# 
   128     0099                     OSCCON          equ	153	;# 
   129     009A                     OSCSTAT         equ	154	;# 
   130     009B                     ADRES           equ	155	;# 
   131     009B                     ADRESL          equ	155	;# 
   132     009C                     ADRESH          equ	156	;# 
   133     009D                     ADCON0          equ	157	;# 
   134     009E                     ADCON1          equ	158	;# 
   135     009F                     ADCON2          equ	159	;# 
   136     010C                     LATA            equ	268	;# 
   137     010D                     LATB            equ	269	;# 
   138     010E                     LATC            equ	270	;# 
   139     0111                     CM1CON0         equ	273	;# 
   140     0112                     CM1CON1         equ	274	;# 
   141     0113                     CM2CON0         equ	275	;# 
   142     0114                     CM2CON1         equ	276	;# 
   143     0115                     CMOUT           equ	277	;# 
   144     0116                     BORCON          equ	278	;# 
   145     0117                     FVRCON          equ	279	;# 
   146     0118                     DACCON0         equ	280	;# 
   147     0119                     DACCON1         equ	281	;# 
   148     011D                     APFCON          equ	285	;# 
   149     011D                     APFCON0         equ	285	;# 
   150     011E                     CM3CON0         equ	286	;# 
   151     011F                     CM3CON1         equ	287	;# 
   152     018C                     ANSELA          equ	396	;# 
   153     018D                     ANSELB          equ	397	;# 
   154     0191                     EEADR           equ	401	;# 
   155     0191                     EEADRL          equ	401	;# 
   156     0192                     EEADRH          equ	402	;# 
   157     0193                     EEDAT           equ	403	;# 
   158     0193                     EEDATL          equ	403	;# 
   159     0193                     EEDATA          equ	403	;# 
   160     0194                     EEDATH          equ	404	;# 
   161     0195                     EECON1          equ	405	;# 
   162     0196                     EECON2          equ	406	;# 
   163     0197                     VREGCON         equ	407	;# 
   164     0199                     RC1REG          equ	409	;# 
   165     0199                     RCREG           equ	409	;# 
   166     0199                     RCREG1          equ	409	;# 
   167     019A                     TX1REG          equ	410	;# 
   168     019A                     TXREG1          equ	410	;# 
   169     019A                     TXREG           equ	410	;# 
   170     019B                     SP1BRG          equ	411	;# 
   171     019B                     SPBRG           equ	411	;# 
   172     019B                     SP1BRGL         equ	411	;# 
   173     019B                     SPBRG1          equ	411	;# 
   174     019B                     SPBRGL          equ	411	;# 
   175     019C                     SP1BRGH         equ	412	;# 
   176     019C                     SPBRGH          equ	412	;# 
   177     019C                     SPBRGH1         equ	412	;# 
   178     019D                     RC1STA          equ	413	;# 
   179     019D                     RCSTA1          equ	413	;# 
   180     019D                     RCSTA           equ	413	;# 
   181     019E                     TX1STA          equ	414	;# 
   182     019E                     TXSTA1          equ	414	;# 
   183     019E                     TXSTA           equ	414	;# 
   184     019F                     BAUD1CON        equ	415	;# 
   185     019F                     BAUDCON1        equ	415	;# 
   186     019F                     BAUDCTL1        equ	415	;# 
   187     019F                     BAUDCON         equ	415	;# 
   188     019F                     BAUDCTL         equ	415	;# 
   189     020C                     WPUA            equ	524	;# 
   190     020D                     WPUB            equ	525	;# 
   191     020E                     WPUC            equ	526	;# 
   192     0210                     WPUE            equ	528	;# 
   193     0211                     SSPBUF          equ	529	;# 
   194     0211                     SSP1BUF         equ	529	;# 
   195     0212                     SSPADD          equ	530	;# 
   196     0212                     SSP1ADD         equ	530	;# 
   197     0213                     SSPMSK          equ	531	;# 
   198     0213                     SSP1MSK         equ	531	;# 
   199     0214                     SSPSTAT         equ	532	;# 
   200     0214                     SSP1STAT        equ	532	;# 
   201     0215                     SSPCON1         equ	533	;# 
   202     0215                     SSP1CON         equ	533	;# 
   203     0215                     SSPCON          equ	533	;# 
   204     0216                     SSPCON2         equ	534	;# 
   205     0216                     SSP1CON2        equ	534	;# 
   206     0217                     SSPCON3         equ	535	;# 
   207     0217                     SSP1CON3        equ	535	;# 
   208     028C                     ODCONA          equ	652	;# 
   209     028D                     ODCONB          equ	653	;# 
   210     028E                     ODCONC          equ	654	;# 
   211     0291                     CCPR1           equ	657	;# 
   212     0291                     CCPR1L          equ	657	;# 
   213     0292                     CCPR1H          equ	658	;# 
   214     0293                     CCP1CON         equ	659	;# 
   215     0298                     CCPR2           equ	664	;# 
   216     0298                     CCPR2L          equ	664	;# 
   217     0299                     CCPR2H          equ	665	;# 
   218     029A                     CCP2CON         equ	666	;# 
   219     030C                     SLRCONA         equ	780	;# 
   220     030D                     SLRCONB         equ	781	;# 
   221     030E                     SLRCONC         equ	782	;# 
   222     038C                     INLVLA          equ	908	;# 
   223     038D                     INLVLB          equ	909	;# 
   224     038E                     INLVLC          equ	910	;# 
   225     0390                     INLVLE          equ	912	;# 
   226     0391                     IOCAP           equ	913	;# 
   227     0392                     IOCAN           equ	914	;# 
   228     0393                     IOCAF           equ	915	;# 
   229     0394                     IOCBP           equ	916	;# 
   230     0395                     IOCBN           equ	917	;# 
   231     0396                     IOCBF           equ	918	;# 
   232     0397                     IOCCP           equ	919	;# 
   233     0398                     IOCCN           equ	920	;# 
   234     0399                     IOCCF           equ	921	;# 
   235     039D                     IOCEP           equ	925	;# 
   236     039E                     IOCEN           equ	926	;# 
   237     039F                     IOCEF           equ	927	;# 
   238     0511                     OPA1CON         equ	1297	;# 
   239     0513                     OPA2CON         equ	1299	;# 
   240     051A                     CLKRCON         equ	1306	;# 
   241     0811                     PSMC1CON        equ	2065	;# 
   242     0812                     PSMC1MDL        equ	2066	;# 
   243     0813                     PSMC1SYNC       equ	2067	;# 
   244     0814                     PSMC1CLK        equ	2068	;# 
   245     0815                     PSMC1OEN        equ	2069	;# 
   246     0816                     PSMC1POL        equ	2070	;# 
   247     0817                     PSMC1BLNK       equ	2071	;# 
   248     0818                     PSMC1REBS       equ	2072	;# 
   249     0819                     PSMC1FEBS       equ	2073	;# 
   250     081A                     PSMC1PHS        equ	2074	;# 
   251     081B                     PSMC1DCS        equ	2075	;# 
   252     081C                     PSMC1PRS        equ	2076	;# 
   253     081D                     PSMC1ASDC       equ	2077	;# 
   254     081E                     PSMC1ASDL       equ	2078	;# 
   255     081F                     PSMC1ASDS       equ	2079	;# 
   256     0820                     PSMC1INT        equ	2080	;# 
   257     0821                     PSMC1PH         equ	2081	;# 
   258     0821                     PSMC1PHL        equ	2081	;# 
   259     0822                     PSMC1PHH        equ	2082	;# 
   260     0823                     PSMC1DC         equ	2083	;# 
   261     0823                     PSMC1DCL        equ	2083	;# 
   262     0824                     PSMC1DCH        equ	2084	;# 
   263     0825                     PSMC1PR         equ	2085	;# 
   264     0825                     PSMC1PRL        equ	2085	;# 
   265     0826                     PSMC1PRH        equ	2086	;# 
   266     0827                     PSMC1TMR        equ	2087	;# 
   267     0827                     PSMC1TMRL       equ	2087	;# 
   268     0828                     PSMC1TMRH       equ	2088	;# 
   269     0829                     PSMC1DBR        equ	2089	;# 
   270     082A                     PSMC1DBF        equ	2090	;# 
   271     082B                     PSMC1BLKR       equ	2091	;# 
   272     082C                     PSMC1BLKF       equ	2092	;# 
   273     082D                     PSMC1FFA        equ	2093	;# 
   274     082E                     PSMC1STR0       equ	2094	;# 
   275     082F                     PSMC1STR1       equ	2095	;# 
   276     0831                     PSMC2CON        equ	2097	;# 
   277     0832                     PSMC2MDL        equ	2098	;# 
   278     0833                     PSMC2SYNC       equ	2099	;# 
   279     0834                     PSMC2CLK        equ	2100	;# 
   280     0835                     PSMC2OEN        equ	2101	;# 
   281     0836                     PSMC2POL        equ	2102	;# 
   282     0837                     PSMC2BLNK       equ	2103	;# 
   283     0838                     PSMC2REBS       equ	2104	;# 
   284     0839                     PSMC2FEBS       equ	2105	;# 
   285     083A                     PSMC2PHS        equ	2106	;# 
   286     083B                     PSMC2DCS        equ	2107	;# 
   287     083C                     PSMC2PRS        equ	2108	;# 
   288     083D                     PSMC2ASDC       equ	2109	;# 
   289     083E                     PSMC2ASDL       equ	2110	;# 
   290     083F                     PSMC2ASDS       equ	2111	;# 
   291     0840                     PSMC2INT        equ	2112	;# 
   292     0841                     PSMC2PH         equ	2113	;# 
   293     0841                     PSMC2PHL        equ	2113	;# 
   294     0842                     PSMC2PHH        equ	2114	;# 
   295     0843                     PSMC2DC         equ	2115	;# 
   296     0843                     PSMC2DCL        equ	2115	;# 
   297     0844                     PSMC2DCH        equ	2116	;# 
   298     0845                     PSMC2PR         equ	2117	;# 
   299     0845                     PSMC2PRL        equ	2117	;# 
   300     0846                     PSMC2PRH        equ	2118	;# 
   301     0847                     PSMC2TMR        equ	2119	;# 
   302     0847                     PSMC2TMRL       equ	2119	;# 
   303     0848                     PSMC2TMRH       equ	2120	;# 
   304     0849                     PSMC2DBR        equ	2121	;# 
   305     084A                     PSMC2DBF        equ	2122	;# 
   306     084B                     PSMC2BLKR       equ	2123	;# 
   307     084C                     PSMC2BLKF       equ	2124	;# 
   308     084D                     PSMC2FFA        equ	2125	;# 
   309     084E                     PSMC2STR0       equ	2126	;# 
   310     084F                     PSMC2STR1       equ	2127	;# 
   311     0FE4                     STATUS_SHAD     equ	4068	;# 
   312     0FE5                     WREG_SHAD       equ	4069	;# 
   313     0FE6                     BSR_SHAD        equ	4070	;# 
   314     0FE7                     PCLATH_SHAD     equ	4071	;# 
   315     0FE8                     FSR0L_SHAD      equ	4072	;# 
   316     0FE9                     FSR0H_SHAD      equ	4073	;# 
   317     0FEA                     FSR1L_SHAD      equ	4074	;# 
   318     0FEB                     FSR1H_SHAD      equ	4075	;# 
   319     0FED                     STKPTR          equ	4077	;# 
   320     0FEE                     TOSL            equ	4078	;# 
   321     0FEF                     TOSH            equ	4079	;# 
   322     0000                     INDF0           equ	0	;# 
   323     0001                     INDF1           equ	1	;# 
   324     0002                     PCL             equ	2	;# 
   325     0003                     STATUS          equ	3	;# 
   326     0004                     FSR0L           equ	4	;# 
   327     0005                     FSR0H           equ	5	;# 
   328     0006                     FSR1L           equ	6	;# 
   329     0007                     FSR1H           equ	7	;# 
   330     0008                     BSR             equ	8	;# 
   331     0009                     WREG            equ	9	;# 
   332     000A                     PCLATH          equ	10	;# 
   333     000B                     INTCON          equ	11	;# 
   334     000C                     PORTA           equ	12	;# 
   335     000D                     PORTB           equ	13	;# 
   336     000E                     PORTC           equ	14	;# 
   337     0010                     PORTE           equ	16	;# 
   338     0011                     PIR1            equ	17	;# 
   339     0012                     PIR2            equ	18	;# 
   340     0014                     PIR4            equ	20	;# 
   341     0015                     TMR0            equ	21	;# 
   342     0016                     TMR1            equ	22	;# 
   343     0016                     TMR1L           equ	22	;# 
   344     0017                     TMR1H           equ	23	;# 
   345     0018                     T1CON           equ	24	;# 
   346     0019                     T1GCON          equ	25	;# 
   347     001A                     TMR2            equ	26	;# 
   348     001B                     PR2             equ	27	;# 
   349     001C                     T2CON           equ	28	;# 
   350     008C                     TRISA           equ	140	;# 
   351     008D                     TRISB           equ	141	;# 
   352     008E                     TRISC           equ	142	;# 
   353     0090                     TRISE           equ	144	;# 
   354     0091                     PIE1            equ	145	;# 
   355     0092                     PIE2            equ	146	;# 
   356     0094                     PIE4            equ	148	;# 
   357     0095                     OPTION_REG      equ	149	;# 
   358     0096                     PCON            equ	150	;# 
   359     0097                     WDTCON          equ	151	;# 
   360     0098                     OSCTUNE         equ	152	;# 
   361     0099                     OSCCON          equ	153	;# 
   362     009A                     OSCSTAT         equ	154	;# 
   363     009B                     ADRES           equ	155	;# 
   364     009B                     ADRESL          equ	155	;# 
   365     009C                     ADRESH          equ	156	;# 
   366     009D                     ADCON0          equ	157	;# 
   367     009E                     ADCON1          equ	158	;# 
   368     009F                     ADCON2          equ	159	;# 
   369     010C                     LATA            equ	268	;# 
   370     010D                     LATB            equ	269	;# 
   371     010E                     LATC            equ	270	;# 
   372     0111                     CM1CON0         equ	273	;# 
   373     0112                     CM1CON1         equ	274	;# 
   374     0113                     CM2CON0         equ	275	;# 
   375     0114                     CM2CON1         equ	276	;# 
   376     0115                     CMOUT           equ	277	;# 
   377     0116                     BORCON          equ	278	;# 
   378     0117                     FVRCON          equ	279	;# 
   379     0118                     DACCON0         equ	280	;# 
   380     0119                     DACCON1         equ	281	;# 
   381     011D                     APFCON          equ	285	;# 
   382     011D                     APFCON0         equ	285	;# 
   383     011E                     CM3CON0         equ	286	;# 
   384     011F                     CM3CON1         equ	287	;# 
   385     018C                     ANSELA          equ	396	;# 
   386     018D                     ANSELB          equ	397	;# 
   387     0191                     EEADR           equ	401	;# 
   388     0191                     EEADRL          equ	401	;# 
   389     0192                     EEADRH          equ	402	;# 
   390     0193                     EEDAT           equ	403	;# 
   391     0193                     EEDATL          equ	403	;# 
   392     0193                     EEDATA          equ	403	;# 
   393     0194                     EEDATH          equ	404	;# 
   394     0195                     EECON1          equ	405	;# 
   395     0196                     EECON2          equ	406	;# 
   396     0197                     VREGCON         equ	407	;# 
   397     0199                     RC1REG          equ	409	;# 
   398     0199                     RCREG           equ	409	;# 
   399     0199                     RCREG1          equ	409	;# 
   400     019A                     TX1REG          equ	410	;# 
   401     019A                     TXREG1          equ	410	;# 
   402     019A                     TXREG           equ	410	;# 
   403     019B                     SP1BRG          equ	411	;# 
   404     019B                     SPBRG           equ	411	;# 
   405     019B                     SP1BRGL         equ	411	;# 
   406     019B                     SPBRG1          equ	411	;# 
   407     019B                     SPBRGL          equ	411	;# 
   408     019C                     SP1BRGH         equ	412	;# 
   409     019C                     SPBRGH          equ	412	;# 
   410     019C                     SPBRGH1         equ	412	;# 
   411     019D                     RC1STA          equ	413	;# 
   412     019D                     RCSTA1          equ	413	;# 
   413     019D                     RCSTA           equ	413	;# 
   414     019E                     TX1STA          equ	414	;# 
   415     019E                     TXSTA1          equ	414	;# 
   416     019E                     TXSTA           equ	414	;# 
   417     019F                     BAUD1CON        equ	415	;# 
   418     019F                     BAUDCON1        equ	415	;# 
   419     019F                     BAUDCTL1        equ	415	;# 
   420     019F                     BAUDCON         equ	415	;# 
   421     019F                     BAUDCTL         equ	415	;# 
   422     020C                     WPUA            equ	524	;# 
   423     020D                     WPUB            equ	525	;# 
   424     020E                     WPUC            equ	526	;# 
   425     0210                     WPUE            equ	528	;# 
   426     0211                     SSPBUF          equ	529	;# 
   427     0211                     SSP1BUF         equ	529	;# 
   428     0212                     SSPADD          equ	530	;# 
   429     0212                     SSP1ADD         equ	530	;# 
   430     0213                     SSPMSK          equ	531	;# 
   431     0213                     SSP1MSK         equ	531	;# 
   432     0214                     SSPSTAT         equ	532	;# 
   433     0214                     SSP1STAT        equ	532	;# 
   434     0215                     SSPCON1         equ	533	;# 
   435     0215                     SSP1CON         equ	533	;# 
   436     0215                     SSPCON          equ	533	;# 
   437     0216                     SSPCON2         equ	534	;# 
   438     0216                     SSP1CON2        equ	534	;# 
   439     0217                     SSPCON3         equ	535	;# 
   440     0217                     SSP1CON3        equ	535	;# 
   441     028C                     ODCONA          equ	652	;# 
   442     028D                     ODCONB          equ	653	;# 
   443     028E                     ODCONC          equ	654	;# 
   444     0291                     CCPR1           equ	657	;# 
   445     0291                     CCPR1L          equ	657	;# 
   446     0292                     CCPR1H          equ	658	;# 
   447     0293                     CCP1CON         equ	659	;# 
   448     0298                     CCPR2           equ	664	;# 
   449     0298                     CCPR2L          equ	664	;# 
   450     0299                     CCPR2H          equ	665	;# 
   451     029A                     CCP2CON         equ	666	;# 
   452     030C                     SLRCONA         equ	780	;# 
   453     030D                     SLRCONB         equ	781	;# 
   454     030E                     SLRCONC         equ	782	;# 
   455     038C                     INLVLA          equ	908	;# 
   456     038D                     INLVLB          equ	909	;# 
   457     038E                     INLVLC          equ	910	;# 
   458     0390                     INLVLE          equ	912	;# 
   459     0391                     IOCAP           equ	913	;# 
   460     0392                     IOCAN           equ	914	;# 
   461     0393                     IOCAF           equ	915	;# 
   462     0394                     IOCBP           equ	916	;# 
   463     0395                     IOCBN           equ	917	;# 
   464     0396                     IOCBF           equ	918	;# 
   465     0397                     IOCCP           equ	919	;# 
   466     0398                     IOCCN           equ	920	;# 
   467     0399                     IOCCF           equ	921	;# 
   468     039D                     IOCEP           equ	925	;# 
   469     039E                     IOCEN           equ	926	;# 
   470     039F                     IOCEF           equ	927	;# 
   471     0511                     OPA1CON         equ	1297	;# 
   472     0513                     OPA2CON         equ	1299	;# 
   473     051A                     CLKRCON         equ	1306	;# 
   474     0811                     PSMC1CON        equ	2065	;# 
   475     0812                     PSMC1MDL        equ	2066	;# 
   476     0813                     PSMC1SYNC       equ	2067	;# 
   477     0814                     PSMC1CLK        equ	2068	;# 
   478     0815                     PSMC1OEN        equ	2069	;# 
   479     0816                     PSMC1POL        equ	2070	;# 
   480     0817                     PSMC1BLNK       equ	2071	;# 
   481     0818                     PSMC1REBS       equ	2072	;# 
   482     0819                     PSMC1FEBS       equ	2073	;# 
   483     081A                     PSMC1PHS        equ	2074	;# 
   484     081B                     PSMC1DCS        equ	2075	;# 
   485     081C                     PSMC1PRS        equ	2076	;# 
   486     081D                     PSMC1ASDC       equ	2077	;# 
   487     081E                     PSMC1ASDL       equ	2078	;# 
   488     081F                     PSMC1ASDS       equ	2079	;# 
   489     0820                     PSMC1INT        equ	2080	;# 
   490     0821                     PSMC1PH         equ	2081	;# 
   491     0821                     PSMC1PHL        equ	2081	;# 
   492     0822                     PSMC1PHH        equ	2082	;# 
   493     0823                     PSMC1DC         equ	2083	;# 
   494     0823                     PSMC1DCL        equ	2083	;# 
   495     0824                     PSMC1DCH        equ	2084	;# 
   496     0825                     PSMC1PR         equ	2085	;# 
   497     0825                     PSMC1PRL        equ	2085	;# 
   498     0826                     PSMC1PRH        equ	2086	;# 
   499     0827                     PSMC1TMR        equ	2087	;# 
   500     0827                     PSMC1TMRL       equ	2087	;# 
   501     0828                     PSMC1TMRH       equ	2088	;# 
   502     0829                     PSMC1DBR        equ	2089	;# 
   503     082A                     PSMC1DBF        equ	2090	;# 
   504     082B                     PSMC1BLKR       equ	2091	;# 
   505     082C                     PSMC1BLKF       equ	2092	;# 
   506     082D                     PSMC1FFA        equ	2093	;# 
   507     082E                     PSMC1STR0       equ	2094	;# 
   508     082F                     PSMC1STR1       equ	2095	;# 
   509     0831                     PSMC2CON        equ	2097	;# 
   510     0832                     PSMC2MDL        equ	2098	;# 
   511     0833                     PSMC2SYNC       equ	2099	;# 
   512     0834                     PSMC2CLK        equ	2100	;# 
   513     0835                     PSMC2OEN        equ	2101	;# 
   514     0836                     PSMC2POL        equ	2102	;# 
   515     0837                     PSMC2BLNK       equ	2103	;# 
   516     0838                     PSMC2REBS       equ	2104	;# 
   517     0839                     PSMC2FEBS       equ	2105	;# 
   518     083A                     PSMC2PHS        equ	2106	;# 
   519     083B                     PSMC2DCS        equ	2107	;# 
   520     083C                     PSMC2PRS        equ	2108	;# 
   521     083D                     PSMC2ASDC       equ	2109	;# 
   522     083E                     PSMC2ASDL       equ	2110	;# 
   523     083F                     PSMC2ASDS       equ	2111	;# 
   524     0840                     PSMC2INT        equ	2112	;# 
   525     0841                     PSMC2PH         equ	2113	;# 
   526     0841                     PSMC2PHL        equ	2113	;# 
   527     0842                     PSMC2PHH        equ	2114	;# 
   528     0843                     PSMC2DC         equ	2115	;# 
   529     0843                     PSMC2DCL        equ	2115	;# 
   530     0844                     PSMC2DCH        equ	2116	;# 
   531     0845                     PSMC2PR         equ	2117	;# 
   532     0845                     PSMC2PRL        equ	2117	;# 
   533     0846                     PSMC2PRH        equ	2118	;# 
   534     0847                     PSMC2TMR        equ	2119	;# 
   535     0847                     PSMC2TMRL       equ	2119	;# 
   536     0848                     PSMC2TMRH       equ	2120	;# 
   537     0849                     PSMC2DBR        equ	2121	;# 
   538     084A                     PSMC2DBF        equ	2122	;# 
   539     084B                     PSMC2BLKR       equ	2123	;# 
   540     084C                     PSMC2BLKF       equ	2124	;# 
   541     084D                     PSMC2FFA        equ	2125	;# 
   542     084E                     PSMC2STR0       equ	2126	;# 
   543     084F                     PSMC2STR1       equ	2127	;# 
   544     0FE4                     STATUS_SHAD     equ	4068	;# 
   545     0FE5                     WREG_SHAD       equ	4069	;# 
   546     0FE6                     BSR_SHAD        equ	4070	;# 
   547     0FE7                     PCLATH_SHAD     equ	4071	;# 
   548     0FE8                     FSR0L_SHAD      equ	4072	;# 
   549     0FE9                     FSR0H_SHAD      equ	4073	;# 
   550     0FEA                     FSR1L_SHAD      equ	4074	;# 
   551     0FEB                     FSR1H_SHAD      equ	4075	;# 
   552     0FED                     STKPTR          equ	4077	;# 
   553     0FEE                     TOSL            equ	4078	;# 
   554     0FEF                     TOSH            equ	4079	;# 
   555     0000                     INDF0           equ	0	;# 
   556     0001                     INDF1           equ	1	;# 
   557     0002                     PCL             equ	2	;# 
   558     0003                     STATUS          equ	3	;# 
   559     0004                     FSR0L           equ	4	;# 
   560     0005                     FSR0H           equ	5	;# 
   561     0006                     FSR1L           equ	6	;# 
   562     0007                     FSR1H           equ	7	;# 
   563     0008                     BSR             equ	8	;# 
   564     0009                     WREG            equ	9	;# 
   565     000A                     PCLATH          equ	10	;# 
   566     000B                     INTCON          equ	11	;# 
   567     000C                     PORTA           equ	12	;# 
   568     000D                     PORTB           equ	13	;# 
   569     000E                     PORTC           equ	14	;# 
   570     0010                     PORTE           equ	16	;# 
   571     0011                     PIR1            equ	17	;# 
   572     0012                     PIR2            equ	18	;# 
   573     0014                     PIR4            equ	20	;# 
   574     0015                     TMR0            equ	21	;# 
   575     0016                     TMR1            equ	22	;# 
   576     0016                     TMR1L           equ	22	;# 
   577     0017                     TMR1H           equ	23	;# 
   578     0018                     T1CON           equ	24	;# 
   579     0019                     T1GCON          equ	25	;# 
   580     001A                     TMR2            equ	26	;# 
   581     001B                     PR2             equ	27	;# 
   582     001C                     T2CON           equ	28	;# 
   583     008C                     TRISA           equ	140	;# 
   584     008D                     TRISB           equ	141	;# 
   585     008E                     TRISC           equ	142	;# 
   586     0090                     TRISE           equ	144	;# 
   587     0091                     PIE1            equ	145	;# 
   588     0092                     PIE2            equ	146	;# 
   589     0094                     PIE4            equ	148	;# 
   590     0095                     OPTION_REG      equ	149	;# 
   591     0096                     PCON            equ	150	;# 
   592     0097                     WDTCON          equ	151	;# 
   593     0098                     OSCTUNE         equ	152	;# 
   594     0099                     OSCCON          equ	153	;# 
   595     009A                     OSCSTAT         equ	154	;# 
   596     009B                     ADRES           equ	155	;# 
   597     009B                     ADRESL          equ	155	;# 
   598     009C                     ADRESH          equ	156	;# 
   599     009D                     ADCON0          equ	157	;# 
   600     009E                     ADCON1          equ	158	;# 
   601     009F                     ADCON2          equ	159	;# 
   602     010C                     LATA            equ	268	;# 
   603     010D                     LATB            equ	269	;# 
   604     010E                     LATC            equ	270	;# 
   605     0111                     CM1CON0         equ	273	;# 
   606     0112                     CM1CON1         equ	274	;# 
   607     0113                     CM2CON0         equ	275	;# 
   608     0114                     CM2CON1         equ	276	;# 
   609     0115                     CMOUT           equ	277	;# 
   610     0116                     BORCON          equ	278	;# 
   611     0117                     FVRCON          equ	279	;# 
   612     0118                     DACCON0         equ	280	;# 
   613     0119                     DACCON1         equ	281	;# 
   614     011D                     APFCON          equ	285	;# 
   615     011D                     APFCON0         equ	285	;# 
   616     011E                     CM3CON0         equ	286	;# 
   617     011F                     CM3CON1         equ	287	;# 
   618     018C                     ANSELA          equ	396	;# 
   619     018D                     ANSELB          equ	397	;# 
   620     0191                     EEADR           equ	401	;# 
   621     0191                     EEADRL          equ	401	;# 
   622     0192                     EEADRH          equ	402	;# 
   623     0193                     EEDAT           equ	403	;# 
   624     0193                     EEDATL          equ	403	;# 
   625     0193                     EEDATA          equ	403	;# 
   626     0194                     EEDATH          equ	404	;# 
   627     0195                     EECON1          equ	405	;# 
   628     0196                     EECON2          equ	406	;# 
   629     0197                     VREGCON         equ	407	;# 
   630     0199                     RC1REG          equ	409	;# 
   631     0199                     RCREG           equ	409	;# 
   632     0199                     RCREG1          equ	409	;# 
   633     019A                     TX1REG          equ	410	;# 
   634     019A                     TXREG1          equ	410	;# 
   635     019A                     TXREG           equ	410	;# 
   636     019B                     SP1BRG          equ	411	;# 
   637     019B                     SPBRG           equ	411	;# 
   638     019B                     SP1BRGL         equ	411	;# 
   639     019B                     SPBRG1          equ	411	;# 
   640     019B                     SPBRGL          equ	411	;# 
   641     019C                     SP1BRGH         equ	412	;# 
   642     019C                     SPBRGH          equ	412	;# 
   643     019C                     SPBRGH1         equ	412	;# 
   644     019D                     RC1STA          equ	413	;# 
   645     019D                     RCSTA1          equ	413	;# 
   646     019D                     RCSTA           equ	413	;# 
   647     019E                     TX1STA          equ	414	;# 
   648     019E                     TXSTA1          equ	414	;# 
   649     019E                     TXSTA           equ	414	;# 
   650     019F                     BAUD1CON        equ	415	;# 
   651     019F                     BAUDCON1        equ	415	;# 
   652     019F                     BAUDCTL1        equ	415	;# 
   653     019F                     BAUDCON         equ	415	;# 
   654     019F                     BAUDCTL         equ	415	;# 
   655     020C                     WPUA            equ	524	;# 
   656     020D                     WPUB            equ	525	;# 
   657     020E                     WPUC            equ	526	;# 
   658     0210                     WPUE            equ	528	;# 
   659     0211                     SSPBUF          equ	529	;# 
   660     0211                     SSP1BUF         equ	529	;# 
   661     0212                     SSPADD          equ	530	;# 
   662     0212                     SSP1ADD         equ	530	;# 
   663     0213                     SSPMSK          equ	531	;# 
   664     0213                     SSP1MSK         equ	531	;# 
   665     0214                     SSPSTAT         equ	532	;# 
   666     0214                     SSP1STAT        equ	532	;# 
   667     0215                     SSPCON1         equ	533	;# 
   668     0215                     SSP1CON         equ	533	;# 
   669     0215                     SSPCON          equ	533	;# 
   670     0216                     SSPCON2         equ	534	;# 
   671     0216                     SSP1CON2        equ	534	;# 
   672     0217                     SSPCON3         equ	535	;# 
   673     0217                     SSP1CON3        equ	535	;# 
   674     028C                     ODCONA          equ	652	;# 
   675     028D                     ODCONB          equ	653	;# 
   676     028E                     ODCONC          equ	654	;# 
   677     0291                     CCPR1           equ	657	;# 
   678     0291                     CCPR1L          equ	657	;# 
   679     0292                     CCPR1H          equ	658	;# 
   680     0293                     CCP1CON         equ	659	;# 
   681     0298                     CCPR2           equ	664	;# 
   682     0298                     CCPR2L          equ	664	;# 
   683     0299                     CCPR2H          equ	665	;# 
   684     029A                     CCP2CON         equ	666	;# 
   685     030C                     SLRCONA         equ	780	;# 
   686     030D                     SLRCONB         equ	781	;# 
   687     030E                     SLRCONC         equ	782	;# 
   688     038C                     INLVLA          equ	908	;# 
   689     038D                     INLVLB          equ	909	;# 
   690     038E                     INLVLC          equ	910	;# 
   691     0390                     INLVLE          equ	912	;# 
   692     0391                     IOCAP           equ	913	;# 
   693     0392                     IOCAN           equ	914	;# 
   694     0393                     IOCAF           equ	915	;# 
   695     0394                     IOCBP           equ	916	;# 
   696     0395                     IOCBN           equ	917	;# 
   697     0396                     IOCBF           equ	918	;# 
   698     0397                     IOCCP           equ	919	;# 
   699     0398                     IOCCN           equ	920	;# 
   700     0399                     IOCCF           equ	921	;# 
   701     039D                     IOCEP           equ	925	;# 
   702     039E                     IOCEN           equ	926	;# 
   703     039F                     IOCEF           equ	927	;# 
   704     0511                     OPA1CON         equ	1297	;# 
   705     0513                     OPA2CON         equ	1299	;# 
   706     051A                     CLKRCON         equ	1306	;# 
   707     0811                     PSMC1CON        equ	2065	;# 
   708     0812                     PSMC1MDL        equ	2066	;# 
   709     0813                     PSMC1SYNC       equ	2067	;# 
   710     0814                     PSMC1CLK        equ	2068	;# 
   711     0815                     PSMC1OEN        equ	2069	;# 
   712     0816                     PSMC1POL        equ	2070	;# 
   713     0817                     PSMC1BLNK       equ	2071	;# 
   714     0818                     PSMC1REBS       equ	2072	;# 
   715     0819                     PSMC1FEBS       equ	2073	;# 
   716     081A                     PSMC1PHS        equ	2074	;# 
   717     081B                     PSMC1DCS        equ	2075	;# 
   718     081C                     PSMC1PRS        equ	2076	;# 
   719     081D                     PSMC1ASDC       equ	2077	;# 
   720     081E                     PSMC1ASDL       equ	2078	;# 
   721     081F                     PSMC1ASDS       equ	2079	;# 
   722     0820                     PSMC1INT        equ	2080	;# 
   723     0821                     PSMC1PH         equ	2081	;# 
   724     0821                     PSMC1PHL        equ	2081	;# 
   725     0822                     PSMC1PHH        equ	2082	;# 
   726     0823                     PSMC1DC         equ	2083	;# 
   727     0823                     PSMC1DCL        equ	2083	;# 
   728     0824                     PSMC1DCH        equ	2084	;# 
   729     0825                     PSMC1PR         equ	2085	;# 
   730     0825                     PSMC1PRL        equ	2085	;# 
   731     0826                     PSMC1PRH        equ	2086	;# 
   732     0827                     PSMC1TMR        equ	2087	;# 
   733     0827                     PSMC1TMRL       equ	2087	;# 
   734     0828                     PSMC1TMRH       equ	2088	;# 
   735     0829                     PSMC1DBR        equ	2089	;# 
   736     082A                     PSMC1DBF        equ	2090	;# 
   737     082B                     PSMC1BLKR       equ	2091	;# 
   738     082C                     PSMC1BLKF       equ	2092	;# 
   739     082D                     PSMC1FFA        equ	2093	;# 
   740     082E                     PSMC1STR0       equ	2094	;# 
   741     082F                     PSMC1STR1       equ	2095	;# 
   742     0831                     PSMC2CON        equ	2097	;# 
   743     0832                     PSMC2MDL        equ	2098	;# 
   744     0833                     PSMC2SYNC       equ	2099	;# 
   745     0834                     PSMC2CLK        equ	2100	;# 
   746     0835                     PSMC2OEN        equ	2101	;# 
   747     0836                     PSMC2POL        equ	2102	;# 
   748     0837                     PSMC2BLNK       equ	2103	;# 
   749     0838                     PSMC2REBS       equ	2104	;# 
   750     0839                     PSMC2FEBS       equ	2105	;# 
   751     083A                     PSMC2PHS        equ	2106	;# 
   752     083B                     PSMC2DCS        equ	2107	;# 
   753     083C                     PSMC2PRS        equ	2108	;# 
   754     083D                     PSMC2ASDC       equ	2109	;# 
   755     083E                     PSMC2ASDL       equ	2110	;# 
   756     083F                     PSMC2ASDS       equ	2111	;# 
   757     0840                     PSMC2INT        equ	2112	;# 
   758     0841                     PSMC2PH         equ	2113	;# 
   759     0841                     PSMC2PHL        equ	2113	;# 
   760     0842                     PSMC2PHH        equ	2114	;# 
   761     0843                     PSMC2DC         equ	2115	;# 
   762     0843                     PSMC2DCL        equ	2115	;# 
   763     0844                     PSMC2DCH        equ	2116	;# 
   764     0845                     PSMC2PR         equ	2117	;# 
   765     0845                     PSMC2PRL        equ	2117	;# 
   766     0846                     PSMC2PRH        equ	2118	;# 
   767     0847                     PSMC2TMR        equ	2119	;# 
   768     0847                     PSMC2TMRL       equ	2119	;# 
   769     0848                     PSMC2TMRH       equ	2120	;# 
   770     0849                     PSMC2DBR        equ	2121	;# 
   771     084A                     PSMC2DBF        equ	2122	;# 
   772     084B                     PSMC2BLKR       equ	2123	;# 
   773     084C                     PSMC2BLKF       equ	2124	;# 
   774     084D                     PSMC2FFA        equ	2125	;# 
   775     084E                     PSMC2STR0       equ	2126	;# 
   776     084F                     PSMC2STR1       equ	2127	;# 
   777     0FE4                     STATUS_SHAD     equ	4068	;# 
   778     0FE5                     WREG_SHAD       equ	4069	;# 
   779     0FE6                     BSR_SHAD        equ	4070	;# 
   780     0FE7                     PCLATH_SHAD     equ	4071	;# 
   781     0FE8                     FSR0L_SHAD      equ	4072	;# 
   782     0FE9                     FSR0H_SHAD      equ	4073	;# 
   783     0FEA                     FSR1L_SHAD      equ	4074	;# 
   784     0FEB                     FSR1H_SHAD      equ	4075	;# 
   785     0FED                     STKPTR          equ	4077	;# 
   786     0FEE                     TOSL            equ	4078	;# 
   787     0FEF                     TOSH            equ	4079	;# 
   788     008C                     _TRISAbits      set	140
   789     008E                     _TRISCbits      set	142
   790     008D                     _TRISBbits      set	141
   791     011D                     _APFCONbits     set	285
   792     010E                     _LATCbits       set	270
   793     010D                     _LATBbits       set	269
   794     018C                     _ANSELAbits     set	396
   795     018D                     _ANSELBbits     set	397
   796     0211                     _SSPBUF         set	529
   797     0216                     _SSPCON2bits    set	534
   798     0216                     _SSPCON2        set	534
   799     0212                     _SSPADD         set	530
   800     0217                     _SSPCON3bits    set	535
   801     0215                     _SSPCON1bits    set	533
   802     0214                     _SSPSTATbits    set	532
   803                           
   804                           	psect	stringtext1
   805     0800                     __pstringtext1:
   806     0800                     STR_1:
   807     0800  3449               	retlw	73	;'I'
   808     0801  3432               	retlw	50	;'2'
   809     0802  3443               	retlw	67	;'C'
   810     0803  3420               	retlw	32	;' '
   811     0804  344D               	retlw	77	;'M'
   812     0805  3461               	retlw	97	;'a'
   813     0806  3473               	retlw	115	;'s'
   814     0807  3474               	retlw	116	;'t'
   815     0808  3465               	retlw	101	;'e'
   816     0809  3472               	retlw	114	;'r'
   817     080A  3400               	retlw	0
   818                           
   819                           	psect	stringtext2
   820     0000                     __pstringtext2:
   821                           
   822                           	psect	cinit
   823     07FD                     start_initialization:	
   824                           ; #config settings
   825                           
   826     07FD                     __initialization:
   827     07FD                     end_of_initialization:	
   828                           ;End of C runtime variable initialization code
   829                           
   830     07FD                     __end_of__initialization:
   831     07FD  0020               	movlb	0
   832     07FE  3183  2BB6         	ljmp	_main	;jump to C main() function
   833                           
   834                           	psect	cstackCOMMON
   835     0070                     __pcstackCOMMON:
   836     0070                     ?_delay_x1o5us:
   837     0070                     ?_programInitialize:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?_programLoop:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_lcd_Initialize:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?_i2c_MasterByteReadSlave:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_memset:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_main:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_lcd_DelaySetupTime:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_lcd_DelayPulse:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_lcd_EPulse:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_lcd_WriteData:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_lcd_PrintCmd:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?_lcd_PrintChar:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?_i2c_BusIdle:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?_i2c_MasterStart:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ?_i2c_MasterStop:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ?_i2c_MasterWrite:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ?_i2c_MasterRead:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ?___bmul:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ?_labs:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ?___lldiv:	
   895                           ; 4 bytes @ 0x0
   896                           
   897     0070                     ?___aldiv:	
   898                           ; 4 bytes @ 0x0
   899                           
   900     0070                     delay_x1o5us@delay:	
   901                           ; 4 bytes @ 0x0
   902                           
   903     0070                     i2c_MasterWrite@byte:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0070                     i2c_MasterRead@ack:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     ___bmul@multiplicand:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     memset@dest:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ___lldiv@divisor:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ___aldiv@divisor:	
   919                           ; 4 bytes @ 0x0
   920                           
   921     0070                     labs@a:	
   922                           ; 4 bytes @ 0x0
   923                           
   924     0070                     ??_delay_x1o5us:	
   925                           ; 4 bytes @ 0x0
   926                           
   927     0070                     ??_i2c_BusIdle:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ??_i2c_MasterStart:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ??_i2c_MasterWrite:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ??_i2c_MasterRead:	
   937                           ; 1 bytes @ 0x0
   938                           
   939                           
   940                           ; 1 bytes @ 0x0
   941     0070                     	ds	1
   942     0071                     delay_x1o5us@i:
   943     0071                     i2c_MasterRead@data:	
   944                           ; 1 bytes @ 0x1
   945                           
   946     0071                     ___bmul@product:	
   947                           ; 1 bytes @ 0x1
   948                           
   949     0071                     memset@c:	
   950                           ; 1 bytes @ 0x1
   951                           
   952     0071                     ??___bmul:	
   953                           ; 2 bytes @ 0x1
   954                           
   955                           
   956                           ; 1 bytes @ 0x1
   957     0071                     	ds	1
   958     0072                     ?_delay_x24o25us:
   959     0072                     ___bmul@multiplier:	
   960                           ; 1 bytes @ 0x2
   961                           
   962     0072                     delay_x24o25us@delay:	
   963                           ; 1 bytes @ 0x2
   964                           
   965     0072                     ??_lcd_DelaySetupTime:	
   966                           ; 2 bytes @ 0x2
   967                           
   968     0072                     ??_lcd_DelayPulse:	
   969                           ; 1 bytes @ 0x2
   970                           
   971     0072                     ??_lcd_EPulse:	
   972                           ; 1 bytes @ 0x2
   973                           
   974     0072                     ??_lcd_WriteData:	
   975                           ; 1 bytes @ 0x2
   976                           
   977                           
   978                           ; 1 bytes @ 0x2
   979     0072                     	ds	1
   980     0073                     memset@n:
   981                           
   982                           ; 2 bytes @ 0x3
   983     0073                     	ds	1
   984     0074                     lcd_WriteData@data:
   985     0074                     delay_x24o25us@i:	
   986                           ; 1 bytes @ 0x4
   987                           
   988     0074                     ___lldiv@dividend:	
   989                           ; 2 bytes @ 0x4
   990                           
   991     0074                     ___aldiv@dividend:	
   992                           ; 4 bytes @ 0x4
   993                           
   994     0074                     ??_labs:	
   995                           ; 4 bytes @ 0x4
   996                           
   997     0074                     ??_delay_x24o25us:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x4
  1002     0074                     	ds	1
  1003     0075                     lcd_PrintCmd@command:
  1004     0075                     lcd_PrintChar@character:	
  1005                           ; 1 bytes @ 0x5
  1006                           
  1007     0075                     memset@p:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010     0075                     ??_memset:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013     0075                     ??_lcd_PrintCmd:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016     0075                     ??_lcd_PrintChar:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x5
  1021     0075                     	ds	1
  1022     0076                     ?_delay_ms:
  1023     0076                     ?_lcd_Goto:	
  1024                           ; 1 bytes @ 0x6
  1025                           
  1026     0076                     ?_lcd_PrintString:	
  1027                           ; 1 bytes @ 0x6
  1028                           
  1029     0076                     ?_i2c_MasterByteWriteSlave:	
  1030                           ; 1 bytes @ 0x6
  1031                           
  1032     0076                     lcd_Goto@x:	
  1033                           ; 1 bytes @ 0x6
  1034                           
  1035     0076                     i2c_MasterByteWriteSlave@data:	
  1036                           ; 1 bytes @ 0x6
  1037                           
  1038     0076                     i2c_MasterByteReadSlave@addrDev:	
  1039                           ; 1 bytes @ 0x6
  1040                           
  1041     0076                     lcd_PrintString@string:	
  1042                           ; 1 bytes @ 0x6
  1043                           
  1044     0076                     delay_ms@delay:	
  1045                           ; 2 bytes @ 0x6
  1046                           
  1047     0076                     ??_i2c_MasterByteReadSlave:	
  1048                           ; 4 bytes @ 0x6
  1049                           
  1050     0076                     ??_i2c_MasterStop:	
  1051                           ; 1 bytes @ 0x6
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x6
  1055     0076                     	ds	1
  1056     0077                     lcd_Goto@y:
  1057     0077                     i2c_MasterByteWriteSlave@addrDev:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060     0077                     i2c_MasterByteReadSlave@data:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063     0077                     ??_lcd_Goto:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066     0077                     ??_i2c_MasterByteWriteSlave:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071     0077                     	ds	1
  1072     0078                     ___aldiv@counter:
  1073     0078                     ___lldiv@quotient:	
  1074                           ; 1 bytes @ 0x8
  1075                           
  1076     0078                     ??_lcd_PrintString:	
  1077                           ; 4 bytes @ 0x8
  1078                           
  1079     0078                     ??___lldiv:	
  1080                           ; 1 bytes @ 0x8
  1081                           
  1082     0078                     ??___aldiv:	
  1083                           ; 1 bytes @ 0x8
  1084                           
  1085                           
  1086                           ; 1 bytes @ 0x8
  1087     0078                     	ds	1
  1088     0079                     ___aldiv@sign:
  1089                           
  1090                           ; 1 bytes @ 0x9
  1091     0079                     	ds	1
  1092     007A                     delay_ms@i:
  1093     007A                     ___aldiv@quotient:	
  1094                           ; 4 bytes @ 0xA
  1095                           
  1096     007A                     ??_delay_ms:	
  1097                           ; 4 bytes @ 0xA
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0xA
  1101     007A                     	ds	2
  1102     007C                     ___lldiv@counter:
  1103                           
  1104                           ; 1 bytes @ 0xC
  1105     007C                     	ds	2
  1106     007E                     ??_programInitialize:
  1107     007E                     ??_lcd_Initialize:	
  1108                           ; 1 bytes @ 0xE
  1109                           
  1110     007E                     ??_main:	
  1111                           ; 1 bytes @ 0xE
  1112                           
  1113                           
  1114                           	psect	cstackBANK0
  1115     0020                     __pcstackBANK0:	
  1116                           ; 1 bytes @ 0xE
  1117                           
  1118     0020                     ?_lcd_PrintDigitInt32:
  1119     0020                     ?_i2c_Initialize:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122     0020                     lcd_PrintDigitInt32@number:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     0020                     i2c_Initialize@fosc:	
  1126                           ; 4 bytes @ 0x0
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x0
  1130     0020                     	ds	4
  1131     0024                     lcd_PrintDigitInt32@noDigit:
  1132     0024                     i2c_Initialize@baudrate:	
  1133                           ; 1 bytes @ 0x4
  1134                           
  1135                           
  1136                           ; 2 bytes @ 0x4
  1137     0024                     	ds	1
  1138     0025                     lcd_PrintDigitInt32@enSign:
  1139                           
  1140                           ; 1 bytes @ 0x5
  1141     0025                     	ds	1
  1142     0026                     lcd_PrintDigitInt32@enZero:
  1143     0026                     ??_i2c_Initialize:	
  1144                           ; 1 bytes @ 0x6
  1145                           
  1146                           
  1147                           ; 1 bytes @ 0x6
  1148     0026                     	ds	1
  1149     0027                     ??_lcd_PrintDigitInt32:
  1150                           
  1151                           ; 1 bytes @ 0x7
  1152     0027                     	ds	4
  1153     002B                     lcd_PrintDigitInt32@numberRevChar:
  1154                           
  1155                           ; 11 bytes @ 0xB
  1156     002B                     	ds	11
  1157     0036                     lcd_PrintDigitInt32@numberChar:
  1158                           
  1159                           ; 11 bytes @ 0x16
  1160     0036                     	ds	11
  1161     0041                     lcd_PrintDigitInt32@tempN:
  1162                           
  1163                           ; 4 bytes @ 0x21
  1164     0041                     	ds	4
  1165     0045                     lcd_PrintDigitInt32@tempC:
  1166                           
  1167                           ; 1 bytes @ 0x25
  1168     0045                     	ds	1
  1169     0046                     lcd_PrintDigitInt32@i2:
  1170                           
  1171                           ; 1 bytes @ 0x26
  1172     0046                     	ds	1
  1173     0047                     lcd_PrintDigitInt32@totalDigit:
  1174                           
  1175                           ; 1 bytes @ 0x27
  1176     0047                     	ds	1
  1177     0048                     lcd_PrintDigitInt32@i1:
  1178                           
  1179                           ; 1 bytes @ 0x28
  1180     0048                     	ds	1
  1181     0049                     ??_programLoop:
  1182                           
  1183                           ; 1 bytes @ 0x29
  1184     0049                     	ds	4
  1185                           
  1186                           	psect	maintext
  1187     03B6                     __pmaintext:	
  1188 ;;
  1189 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1190 ;;
  1191 ;; *************** function _main *****************
  1192 ;; Defined at:
  1193 ;;		line 26 in file "main.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : B1F/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1207 ;;      Params:         0       0       0       0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels required when called: 8
  1213 ;; This function calls:
  1214 ;;		_delay_ms
  1215 ;;		_delay_x1o5us
  1216 ;;		_programInitialize
  1217 ;;		_programLoop
  1218 ;; This function is called by:
  1219 ;;		Startup code after reset
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223     03B6                     _main:	
  1224                           ;psect for function _main
  1225                           
  1226     03B6                     l1539:	
  1227                           ;incstack = 0
  1228                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1229                           
  1230                           
  1231                           ;main.c: 27:     delay_ms(100);
  1232     03B6  3000               	movlw	0
  1233     03B7  00F9               	movwf	delay_ms@delay+3
  1234     03B8  3000               	movlw	0
  1235     03B9  00F8               	movwf	delay_ms@delay+2
  1236     03BA  3000               	movlw	0
  1237     03BB  00F7               	movwf	delay_ms@delay+1
  1238     03BC  3064               	movlw	100
  1239     03BD  00F6               	movwf	delay_ms@delay
  1240     03BE  3183  23EB  3183   	fcall	_delay_ms
  1241                           
  1242                           ;main.c: 28:     delay_x1o5us(86);
  1243     03C1  3056               	movlw	86
  1244     03C2  3182  22F6  3183   	fcall	_delay_x1o5us
  1245     03C5                     l1541:
  1246                           
  1247                           ;main.c: 30:     programInitialize();
  1248     03C5  3184  24ED  3183   	fcall	_programInitialize
  1249     03C8                     l1543:
  1250                           
  1251                           ;main.c: 33:         programLoop();
  1252     03C8  3186  2662  3183   	fcall	_programLoop
  1253     03CB  2BC8               	goto	l1543
  1254     03CC  3180  2802         	ljmp	start
  1255     03CE                     __end_of_main:
  1256                           
  1257                           	psect	text1
  1258     0662                     __ptext1:	
  1259 ;; *************** function _programLoop *****************
  1260 ;; Defined at:
  1261 ;;		line 75 in file "program.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1275 ;;      Params:         0       0       0       0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0
  1277 ;;      Temps:          0       4       0       0       0       0       0       0
  1278 ;;      Totals:         0       4       0       0       0       0       0       0
  1279 ;;Total ram usage:        4 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 7
  1282 ;; This function calls:
  1283 ;;		_delay_ms
  1284 ;;		_i2c_MasterByteReadSlave
  1285 ;;		_i2c_MasterByteWriteSlave
  1286 ;;		_lcd_Goto
  1287 ;;		_lcd_PrintDigitInt32
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293     0662                     _programLoop:	
  1294                           ;psect for function _programLoop
  1295                           
  1296     0662                     l1513:	
  1297                           ;incstack = 0
  1298                           ; Regs used in _programLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1299                           
  1300                           
  1301                           ;program.c: 78:     LATBbits.LATB7 = 1;
  1302     0662  0022               	movlb	2	; select bank2
  1303     0663  178D               	bsf	13,7	;volatile
  1304     0664                     l1515:
  1305                           
  1306                           ;program.c: 79:     i2c_MasterByteWriteSlave(0x10, 0xAA);
  1307     0664  30AA               	movlw	170
  1308     0665  00F6               	movwf	i2c_MasterByteWriteSlave@data
  1309     0666  3010               	movlw	16
  1310     0667  3183  2303  3186   	fcall	_i2c_MasterByteWriteSlave
  1311                           
  1312                           ;program.c: 80:     i2c_MasterByteWriteSlave(0x20, 0x0F);
  1313     066A  300F               	movlw	15
  1314     066B  00F6               	movwf	i2c_MasterByteWriteSlave@data
  1315     066C  3020               	movlw	32
  1316     066D  3183  2303  3186   	fcall	_i2c_MasterByteWriteSlave
  1317                           
  1318                           ;program.c: 81:     delay_ms(200);
  1319     0670  3000               	movlw	0
  1320     0671  00F9               	movwf	delay_ms@delay+3
  1321     0672  3000               	movlw	0
  1322     0673  00F8               	movwf	delay_ms@delay+2
  1323     0674  3000               	movlw	0
  1324     0675  00F7               	movwf	delay_ms@delay+1
  1325     0676  30C8               	movlw	200
  1326     0677  00F6               	movwf	delay_ms@delay
  1327     0678  3183  23EB  3186   	fcall	_delay_ms
  1328     067B                     l1517:
  1329                           
  1330                           ;program.c: 83:     LATBbits.LATB7 = 0;
  1331     067B  0022               	movlb	2	; select bank2
  1332     067C  138D               	bcf	13,7	;volatile
  1333     067D                     l1519:
  1334                           
  1335                           ;program.c: 84:     lcd_Goto(1, 0);
  1336     067D  01F6               	clrf	lcd_Goto@x
  1337     067E  3001               	movlw	1
  1338     067F  3183  23CE  3186   	fcall	_lcd_Goto
  1339     0682                     l1521:
  1340                           
  1341                           ;program.c: 85:     lcd_PrintDigitInt32(i2c_MasterByteReadSlave(0x10), 2, 0, 1);
  1342     0682  3010               	movlw	16
  1343     0683  3183  234A  3186   	fcall	_i2c_MasterByteReadSlave
  1344     0686  0020               	movlb	0	; select bank0
  1345     0687  00C9               	movwf	??_programLoop
  1346     0688  01CA               	clrf	??_programLoop+1
  1347     0689  01CB               	clrf	??_programLoop+2
  1348     068A  01CC               	clrf	??_programLoop+3
  1349     068B  084C               	movf	??_programLoop+3,w
  1350     068C  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1351     068D  084B               	movf	??_programLoop+2,w
  1352     068E  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1353     068F  084A               	movf	??_programLoop+1,w
  1354     0690  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1355     0691  0849               	movf	??_programLoop,w
  1356     0692  00A0               	movwf	lcd_PrintDigitInt32@number
  1357     0693  3002               	movlw	2
  1358     0694  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1359     0695  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1360     0696  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1361     0697  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1362     0698  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1363     069B                     l1523:
  1364                           
  1365                           ;program.c: 86:     lcd_Goto(1, 4);
  1366     069B  3004               	movlw	4
  1367     069C  00F6               	movwf	lcd_Goto@x
  1368     069D  3001               	movlw	1
  1369     069E  3183  23CE  3186   	fcall	_lcd_Goto
  1370     06A1                     l1525:
  1371                           
  1372                           ;program.c: 87:     lcd_PrintDigitInt32(i2c_MasterByteReadSlave(0x20), 2, 0, 1);
  1373     06A1  3020               	movlw	32
  1374     06A2  3183  234A  3186   	fcall	_i2c_MasterByteReadSlave
  1375     06A5  0020               	movlb	0	; select bank0
  1376     06A6  00C9               	movwf	??_programLoop
  1377     06A7  01CA               	clrf	??_programLoop+1
  1378     06A8  01CB               	clrf	??_programLoop+2
  1379     06A9  01CC               	clrf	??_programLoop+3
  1380     06AA  084C               	movf	??_programLoop+3,w
  1381     06AB  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1382     06AC  084B               	movf	??_programLoop+2,w
  1383     06AD  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1384     06AE  084A               	movf	??_programLoop+1,w
  1385     06AF  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1386     06B0  0849               	movf	??_programLoop,w
  1387     06B1  00A0               	movwf	lcd_PrintDigitInt32@number
  1388     06B2  3002               	movlw	2
  1389     06B3  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1390     06B4  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1391     06B5  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1392     06B6  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1393     06B7  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1394                           
  1395                           ;program.c: 88:     delay_ms(200);
  1396     06BA  3000               	movlw	0
  1397     06BB  00F9               	movwf	delay_ms@delay+3
  1398     06BC  3000               	movlw	0
  1399     06BD  00F8               	movwf	delay_ms@delay+2
  1400     06BE  3000               	movlw	0
  1401     06BF  00F7               	movwf	delay_ms@delay+1
  1402     06C0  30C8               	movlw	200
  1403     06C1  00F6               	movwf	delay_ms@delay
  1404     06C2  3183  23EB  3186   	fcall	_delay_ms
  1405     06C5                     l1527:
  1406                           
  1407                           ;program.c: 90:     LATBbits.LATB7 = 1;
  1408     06C5  0022               	movlb	2	; select bank2
  1409     06C6  178D               	bsf	13,7	;volatile
  1410                           
  1411                           ;program.c: 91:     i2c_MasterByteWriteSlave(0x10, 0x55);
  1412     06C7  3055               	movlw	85
  1413     06C8  00F6               	movwf	i2c_MasterByteWriteSlave@data
  1414     06C9  3010               	movlw	16
  1415     06CA  3183  2303  3186   	fcall	_i2c_MasterByteWriteSlave
  1416                           
  1417                           ;program.c: 92:     i2c_MasterByteWriteSlave(0x20, 0xF0);
  1418     06CD  30F0               	movlw	240
  1419     06CE  00F6               	movwf	i2c_MasterByteWriteSlave@data
  1420     06CF  3020               	movlw	32
  1421     06D0  3183  2303  3186   	fcall	_i2c_MasterByteWriteSlave
  1422                           
  1423                           ;program.c: 93:     delay_ms(200);
  1424     06D3  3000               	movlw	0
  1425     06D4  00F9               	movwf	delay_ms@delay+3
  1426     06D5  3000               	movlw	0
  1427     06D6  00F8               	movwf	delay_ms@delay+2
  1428     06D7  3000               	movlw	0
  1429     06D8  00F7               	movwf	delay_ms@delay+1
  1430     06D9  30C8               	movlw	200
  1431     06DA  00F6               	movwf	delay_ms@delay
  1432     06DB  3183  23EB  3186   	fcall	_delay_ms
  1433     06DE                     l1529:
  1434                           
  1435                           ;program.c: 95:     LATBbits.LATB7 = 0;
  1436     06DE  0022               	movlb	2	; select bank2
  1437     06DF  138D               	bcf	13,7	;volatile
  1438     06E0                     l1531:
  1439                           
  1440                           ;program.c: 96:     lcd_Goto(1, 0);
  1441     06E0  01F6               	clrf	lcd_Goto@x
  1442     06E1  3001               	movlw	1
  1443     06E2  3183  23CE  3186   	fcall	_lcd_Goto
  1444     06E5                     l1533:
  1445                           
  1446                           ;program.c: 97:     lcd_PrintDigitInt32(i2c_MasterByteReadSlave(0x10), 2, 0, 1);
  1447     06E5  3010               	movlw	16
  1448     06E6  3183  234A  3186   	fcall	_i2c_MasterByteReadSlave
  1449     06E9  0020               	movlb	0	; select bank0
  1450     06EA  00C9               	movwf	??_programLoop
  1451     06EB  01CA               	clrf	??_programLoop+1
  1452     06EC  01CB               	clrf	??_programLoop+2
  1453     06ED  01CC               	clrf	??_programLoop+3
  1454     06EE  084C               	movf	??_programLoop+3,w
  1455     06EF  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1456     06F0  084B               	movf	??_programLoop+2,w
  1457     06F1  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1458     06F2  084A               	movf	??_programLoop+1,w
  1459     06F3  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1460     06F4  0849               	movf	??_programLoop,w
  1461     06F5  00A0               	movwf	lcd_PrintDigitInt32@number
  1462     06F6  3002               	movlw	2
  1463     06F7  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1464     06F8  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1465     06F9  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1466     06FA  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1467     06FB  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1468     06FE                     l1535:
  1469                           
  1470                           ;program.c: 98:     lcd_Goto(1, 4);
  1471     06FE  3004               	movlw	4
  1472     06FF  00F6               	movwf	lcd_Goto@x
  1473     0700  3001               	movlw	1
  1474     0701  3183  23CE  3186   	fcall	_lcd_Goto
  1475     0704                     l1537:
  1476                           
  1477                           ;program.c: 99:     lcd_PrintDigitInt32(i2c_MasterByteReadSlave(0x20), 2, 0, 1);
  1478     0704  3020               	movlw	32
  1479     0705  3183  234A  3186   	fcall	_i2c_MasterByteReadSlave
  1480     0708  0020               	movlb	0	; select bank0
  1481     0709  00C9               	movwf	??_programLoop
  1482     070A  01CA               	clrf	??_programLoop+1
  1483     070B  01CB               	clrf	??_programLoop+2
  1484     070C  01CC               	clrf	??_programLoop+3
  1485     070D  084C               	movf	??_programLoop+3,w
  1486     070E  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1487     070F  084B               	movf	??_programLoop+2,w
  1488     0710  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1489     0711  084A               	movf	??_programLoop+1,w
  1490     0712  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1491     0713  0849               	movf	??_programLoop,w
  1492     0714  00A0               	movwf	lcd_PrintDigitInt32@number
  1493     0715  3002               	movlw	2
  1494     0716  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1495     0717  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1496     0718  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1497     0719  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1498     071A  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1499                           
  1500                           ;program.c: 100:     delay_ms(200);
  1501     071D  3000               	movlw	0
  1502     071E  00F9               	movwf	delay_ms@delay+3
  1503     071F  3000               	movlw	0
  1504     0720  00F8               	movwf	delay_ms@delay+2
  1505     0721  3000               	movlw	0
  1506     0722  00F7               	movwf	delay_ms@delay+1
  1507     0723  30C8               	movlw	200
  1508     0724  00F6               	movwf	delay_ms@delay
  1509     0725  3183  23EB  3186   	fcall	_delay_ms
  1510     0728                     l90:
  1511     0728  0008               	return
  1512     0729                     __end_of_programLoop:
  1513                           
  1514                           	psect	text2
  1515     0303                     __ptext2:	
  1516 ;; *************** function _i2c_MasterByteWriteSlave *****************
  1517 ;; Defined at:
  1518 ;;		line 364 in file "program.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  addrDev         1    wreg     unsigned char 
  1521 ;;  data            1    6[COMMON] unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  addrDev         1    7[COMMON] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1533 ;;      Params:         1       0       0       0       0       0       0       0
  1534 ;;      Locals:         1       0       0       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0
  1536 ;;      Totals:         2       0       0       0       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 3
  1540 ;; This function calls:
  1541 ;;		_i2c_MasterStart
  1542 ;;		_i2c_MasterStop
  1543 ;;		_i2c_MasterWrite
  1544 ;; This function is called by:
  1545 ;;		_programLoop
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549     0303                     _i2c_MasterByteWriteSlave:	
  1550                           ;psect for function _i2c_MasterByteWriteSlave
  1551                           
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _i2c_MasterByteWriteSlave: [wreg+status,2+status,0+pclath+cstack]
  1555                           ;i2c_MasterByteWriteSlave@addrDev stored from wreg
  1556     0303  00F7               	movwf	i2c_MasterByteWriteSlave@addrDev
  1557     0304                     l1483:
  1558                           
  1559                           ;program.c: 365:     i2c_MasterStart();
  1560     0304  3182  22DF  3183   	fcall	_i2c_MasterStart
  1561                           
  1562                           ;program.c: 367:     i2c_MasterWrite((uint8_t)(addrDev << 1));
  1563     0307  3577               	lslf	i2c_MasterByteWriteSlave@addrDev,w
  1564     0308  3182  22EA  3183   	fcall	_i2c_MasterWrite
  1565                           
  1566                           ;program.c: 369:     i2c_MasterWrite(data);
  1567     030B  0876               	movf	i2c_MasterByteWriteSlave@data,w
  1568     030C  3182  22EA  3183   	fcall	_i2c_MasterWrite
  1569                           
  1570                           ;program.c: 371:     i2c_MasterStop();
  1571     030F  3183  2313  3183   	fcall	_i2c_MasterStop
  1572     0312                     l191:
  1573     0312  0008               	return
  1574     0313                     __end_of_i2c_MasterByteWriteSlave:
  1575                           
  1576                           	psect	text3
  1577     034A                     __ptext3:	
  1578 ;; *************** function _i2c_MasterByteReadSlave *****************
  1579 ;; Defined at:
  1580 ;;		line 374 in file "program.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  addrDev         1    wreg     unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  addrDev         1    6[COMMON] unsigned char 
  1585 ;;  data            1    7[COMMON] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1595 ;;      Params:         0       0       0       0       0       0       0       0
  1596 ;;      Locals:         2       0       0       0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0
  1598 ;;      Totals:         2       0       0       0       0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 3
  1602 ;; This function calls:
  1603 ;;		_i2c_MasterRead
  1604 ;;		_i2c_MasterStart
  1605 ;;		_i2c_MasterStop
  1606 ;;		_i2c_MasterWrite
  1607 ;; This function is called by:
  1608 ;;		_programLoop
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612     034A                     _i2c_MasterByteReadSlave:	
  1613                           ;psect for function _i2c_MasterByteReadSlave
  1614                           
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _i2c_MasterByteReadSlave: [wreg+status,2+status,0+pclath+cstack]
  1618                           ;i2c_MasterByteReadSlave@addrDev stored from wreg
  1619     034A  00F6               	movwf	i2c_MasterByteReadSlave@addrDev
  1620     034B                     l1485:
  1621     034B                     l1487:
  1622                           
  1623                           ;program.c: 377:     i2c_MasterStart();
  1624     034B  3182  22DF  3183   	fcall	_i2c_MasterStart
  1625     034E                     l1489:
  1626                           
  1627                           ;program.c: 379:     i2c_MasterWrite((uint8_t)((addrDev << 1) | 1));
  1628     034E  1403               	setc
  1629     034F  0D76               	rlf	i2c_MasterByteReadSlave@addrDev,w
  1630     0350  3182  22EA  3183   	fcall	_i2c_MasterWrite
  1631     0353                     l1491:
  1632                           
  1633                           ;program.c: 381:     data = i2c_MasterRead(0);
  1634     0353  3000               	movlw	0
  1635     0354  3183  2337  3183   	fcall	_i2c_MasterRead
  1636     0357  00F7               	movwf	i2c_MasterByteReadSlave@data
  1637     0358                     l1493:
  1638                           
  1639                           ;program.c: 383:     i2c_MasterStop();
  1640     0358  3183  2313  3183   	fcall	_i2c_MasterStop
  1641     035B                     l1495:
  1642                           
  1643                           ;program.c: 385:     return data;
  1644     035B  0877               	movf	i2c_MasterByteReadSlave@data,w
  1645     035C                     l194:
  1646     035C  0008               	return
  1647     035D                     __end_of_i2c_MasterByteReadSlave:
  1648                           
  1649                           	psect	text4
  1650     02EA                     __ptext4:	
  1651 ;; *************** function _i2c_MasterWrite *****************
  1652 ;; Defined at:
  1653 ;;		line 340 in file "program.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  byte            1    wreg     unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  byte            1    0[COMMON] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1667 ;;      Params:         0       0       0       0       0       0       0       0
  1668 ;;      Locals:         1       0       0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0
  1670 ;;      Totals:         1       0       0       0       0       0       0       0
  1671 ;;Total ram usage:        1 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 1
  1674 ;; This function calls:
  1675 ;;		_i2c_BusIdle
  1676 ;; This function is called by:
  1677 ;;		_i2c_MasterByteWriteSlave
  1678 ;;		_i2c_MasterByteReadSlave
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682     02EA                     _i2c_MasterWrite:	
  1683                           ;psect for function _i2c_MasterWrite
  1684                           
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _i2c_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  1688                           ;i2c_MasterWrite@byte stored from wreg
  1689     02EA  00F0               	movwf	i2c_MasterWrite@byte
  1690     02EB                     l917:
  1691                           
  1692                           ;program.c: 341:     i2c_BusIdle();
  1693     02EB  3182  22B6  3182   	fcall	_i2c_BusIdle
  1694     02EE                     l919:
  1695                           
  1696                           ;program.c: 343:     SSPBUF = byte;
  1697     02EE  0870               	movf	i2c_MasterWrite@byte,w
  1698     02EF  0024               	movlb	4	; select bank4
  1699     02F0  0091               	movwf	17	;volatile
  1700     02F1                     l179:	
  1701                           ;program.c: 345:     while(SSPSTATbits.BF);
  1702                           
  1703     02F1  1814               	btfsc	20,0	;volatile
  1704     02F2  2AF4               	goto	u151
  1705     02F3  2AF5               	goto	u150
  1706     02F4                     u151:
  1707     02F4  2AF1               	goto	l179
  1708     02F5                     u150:
  1709     02F5                     l182:
  1710     02F5  0008               	return
  1711     02F6                     __end_of_i2c_MasterWrite:
  1712                           
  1713                           	psect	text5
  1714     0313                     __ptext5:	
  1715 ;; *************** function _i2c_MasterStop *****************
  1716 ;; Defined at:
  1717 ;;		line 327 in file "program.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1731 ;;      Params:         0       0       0       0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 2
  1738 ;; This function calls:
  1739 ;;		_delay_x1o5us
  1740 ;;		_delay_x24o25us
  1741 ;;		_i2c_BusIdle
  1742 ;; This function is called by:
  1743 ;;		_i2c_MasterByteWriteSlave
  1744 ;;		_i2c_MasterByteReadSlave
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748     0313                     _i2c_MasterStop:	
  1749                           ;psect for function _i2c_MasterStop
  1750                           
  1751     0313                     l1307:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _i2c_MasterStop: [wreg+status,2+status,0+pclath+cstack]
  1754                           
  1755                           
  1756                           ;program.c: 328:     i2c_BusIdle();
  1757     0313  3182  22B6  3183   	fcall	_i2c_BusIdle
  1758     0316                     l1309:
  1759                           
  1760                           ;program.c: 330:     SSPCON2bits.PEN = 1;
  1761     0316  0024               	movlb	4	; select bank4
  1762     0317  1516               	bsf	22,2	;volatile
  1763                           
  1764                           ;program.c: 332:     delay_x1o5us(7);
  1765     0318  3007               	movlw	7
  1766     0319  3182  22F6  3183   	fcall	_delay_x1o5us
  1767                           
  1768                           ;program.c: 337:     delay_x24o25us(60);
  1769     031C  303C               	movlw	60
  1770     031D  00F2               	movwf	delay_x24o25us@delay
  1771     031E  3000               	movlw	0
  1772     031F  00F3               	movwf	delay_x24o25us@delay+1
  1773     0320  3183  2372  3183   	fcall	_delay_x24o25us
  1774     0323                     l176:
  1775     0323  0008               	return
  1776     0324                     __end_of_i2c_MasterStop:
  1777                           
  1778                           	psect	text6
  1779     02DF                     __ptext6:	
  1780 ;; *************** function _i2c_MasterStart *****************
  1781 ;; Defined at:
  1782 ;;		line 305 in file "program.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1796 ;;      Params:         0       0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 1
  1803 ;; This function calls:
  1804 ;;		_i2c_BusIdle
  1805 ;; This function is called by:
  1806 ;;		_i2c_MasterByteWriteSlave
  1807 ;;		_i2c_MasterByteReadSlave
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811     02DF                     _i2c_MasterStart:	
  1812                           ;psect for function _i2c_MasterStart
  1813                           
  1814     02DF                     l899:	
  1815                           ;incstack = 0
  1816                           ; Regs used in _i2c_MasterStart: [wreg+status,2+status,0+pclath+cstack]
  1817                           
  1818                           
  1819                           ;program.c: 306:     i2c_BusIdle();
  1820     02DF  3182  22B6  3182   	fcall	_i2c_BusIdle
  1821     02E2                     l901:
  1822                           
  1823                           ;program.c: 308:     SSPCON2bits.SEN = 1;
  1824     02E2  0024               	movlb	4	; select bank4
  1825     02E3  1416               	bsf	22,0	;volatile
  1826     02E4                     l903:
  1827                           
  1828                           ;program.c: 309:     __nop();
  1829     02E4  0000               	nop
  1830     02E5                     l905:
  1831                           
  1832                           ;program.c: 310:     __nop();
  1833     02E5  0000               	nop
  1834     02E6                     l907:
  1835                           
  1836                           ;program.c: 311:     __nop();
  1837     02E6  0000               	nop
  1838     02E7                     l909:
  1839                           
  1840                           ;program.c: 312:     __nop();
  1841     02E7  0000               	nop
  1842     02E8                     l911:
  1843                           
  1844                           ;program.c: 313:     __nop();
  1845     02E8  0000               	nop
  1846     02E9                     l170:
  1847     02E9  0008               	return
  1848     02EA                     __end_of_i2c_MasterStart:
  1849                           
  1850                           	psect	text7
  1851     0337                     __ptext7:	
  1852 ;; *************** function _i2c_MasterRead *****************
  1853 ;; Defined at:
  1854 ;;		line 348 in file "program.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  ack             1    wreg     unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  ack             1    0[COMMON] unsigned char 
  1859 ;;  data            1    1[COMMON] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      unsigned char 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0, pclath, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1869 ;;      Params:         0       0       0       0       0       0       0       0
  1870 ;;      Locals:         2       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0
  1872 ;;      Totals:         2       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 1
  1876 ;; This function calls:
  1877 ;;		_i2c_BusIdle
  1878 ;; This function is called by:
  1879 ;;		_i2c_MasterByteReadSlave
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883     0337                     _i2c_MasterRead:	
  1884                           ;psect for function _i2c_MasterRead
  1885                           
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _i2c_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  1889                           ;i2c_MasterRead@ack stored from wreg
  1890     0337  00F0               	movwf	i2c_MasterRead@ack
  1891     0338                     l921:
  1892     0338                     l923:
  1893                           
  1894                           ;program.c: 351:     i2c_BusIdle();
  1895     0338  3182  22B6  3183   	fcall	_i2c_BusIdle
  1896     033B                     l925:
  1897                           
  1898                           ;program.c: 353:     SSPCON2bits.RCEN = 1;
  1899     033B  0024               	movlb	4	; select bank4
  1900     033C  1596               	bsf	22,3	;volatile
  1901     033D                     l185:	
  1902                           ;program.c: 355:     while(!SSPSTATbits.BF);
  1903                           
  1904     033D  1C14               	btfss	20,0	;volatile
  1905     033E  2B40               	goto	u161
  1906     033F  2B41               	goto	u160
  1907     0340                     u161:
  1908     0340  2B3D               	goto	l185
  1909     0341                     u160:
  1910     0341                     l927:
  1911                           
  1912                           ;program.c: 357:     data = SSPBUF;
  1913     0341  0811               	movf	17,w	;volatile
  1914     0342  00F1               	movwf	i2c_MasterRead@data
  1915     0343                     l929:
  1916                           
  1917                           ;program.c: 359:     SSPCON2bits.ACKEN = ack;
  1918     0343  0C70               	rrf	i2c_MasterRead@ack,w
  1919     0344  1C03               	skipc
  1920     0345  1216               	bcf	22,4	;volatile
  1921     0346  1803               	skipnc
  1922     0347  1616               	bsf	22,4	;volatile
  1923     0348                     l931:
  1924                           
  1925                           ;program.c: 361:     return data;
  1926     0348  0871               	movf	i2c_MasterRead@data,w
  1927     0349                     l188:
  1928     0349  0008               	return
  1929     034A                     __end_of_i2c_MasterRead:
  1930                           
  1931                           	psect	text8
  1932     02B6                     __ptext8:	
  1933 ;; *************** function _i2c_BusIdle *****************
  1934 ;; Defined at:
  1935 ;;		line 300 in file "program.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1949 ;;      Params:         0       0       0       0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_i2c_MasterStart
  1959 ;;		_i2c_MasterStop
  1960 ;;		_i2c_MasterWrite
  1961 ;;		_i2c_MasterRead
  1962 ;;		_i2c_MasterRstart
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966     02B6                     _i2c_BusIdle:	
  1967                           ;psect for function _i2c_BusIdle
  1968                           
  1969     02B6                     l859:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _i2c_BusIdle: [wreg+status,2]
  1972                           
  1973     02B6                     l861:	
  1974                           ;program.c: 301:     while(SSPCON2 & 0b00011111);
  1975                           
  1976     02B6  0024               	movlb	4	; select bank4
  1977     02B7  0816               	movf	22,w	;volatile
  1978     02B8  391F               	andlw	31
  1979     02B9  1D03               	btfss	3,2
  1980     02BA  2ABC               	goto	u101
  1981     02BB  2ABD               	goto	u100
  1982     02BC                     u101:
  1983     02BC  2AB6               	goto	l861
  1984     02BD                     u100:
  1985     02BD                     l167:
  1986     02BD  0008               	return
  1987     02BE                     __end_of_i2c_BusIdle:
  1988                           
  1989                           	psect	text9
  1990     04ED                     __ptext9:	
  1991 ;; *************** function _programInitialize *****************
  1992 ;; Defined at:
  1993 ;;		line 20 in file "program.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2007 ;;      Params:         0       0       0       0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 7
  2014 ;; This function calls:
  2015 ;;		_i2c_Initialize
  2016 ;;		_lcd_Goto
  2017 ;;		_lcd_Initialize
  2018 ;;		_lcd_PrintDigitInt32
  2019 ;;		_lcd_PrintString
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     04ED                     _programInitialize:	
  2026                           ;psect for function _programInitialize
  2027                           
  2028     04ED                     l1499:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _programInitialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;program.c: 21:     TRISBbits.TRISB6 = 0;
  2034     04ED  0021               	movlb	1	; select bank1
  2035     04EE  130D               	bcf	13,6	;volatile
  2036                           
  2037                           ;program.c: 22:     TRISBbits.TRISB7 = 0;
  2038     04EF  138D               	bcf	13,7	;volatile
  2039                           
  2040                           ;program.c: 24:     LATBbits.LATB7 = 0;
  2041     04F0  0022               	movlb	2	; select bank2
  2042     04F1  138D               	bcf	13,7	;volatile
  2043                           
  2044                           ;program.c: 25:     LATBbits.LATB6 = 0;
  2045     04F2  130D               	bcf	13,6	;volatile
  2046                           
  2047                           ;program.c: 27:     TRISBbits.TRISB5 = 0;
  2048     04F3  0021               	movlb	1	; select bank1
  2049     04F4  128D               	bcf	13,5	;volatile
  2050                           
  2051                           ;program.c: 28:     TRISBbits.TRISB4 = 0;
  2052     04F5  120D               	bcf	13,4	;volatile
  2053                           
  2054                           ;program.c: 29:     TRISBbits.TRISB3 = 0;
  2055     04F6  118D               	bcf	13,3	;volatile
  2056                           
  2057                           ;program.c: 30:     TRISBbits.TRISB2 = 0;
  2058     04F7  110D               	bcf	13,2	;volatile
  2059                           
  2060                           ;program.c: 31:     TRISBbits.TRISB1 = 0;
  2061     04F8  108D               	bcf	13,1	;volatile
  2062                           
  2063                           ;program.c: 32:     TRISCbits.TRISC5 = 0;
  2064     04F9  128E               	bcf	14,5	;volatile
  2065                           
  2066                           ;program.c: 34:     ANSELBbits.ANSB5 = 0;
  2067     04FA  0023               	movlb	3	; select bank3
  2068     04FB  128D               	bcf	13,5	;volatile
  2069                           
  2070                           ;program.c: 35:     ANSELBbits.ANSB4 = 0;
  2071     04FC  120D               	bcf	13,4	;volatile
  2072                           
  2073                           ;program.c: 36:     ANSELBbits.ANSB3 = 0;
  2074     04FD  118D               	bcf	13,3	;volatile
  2075                           
  2076                           ;program.c: 37:     ANSELBbits.ANSB2 = 0;
  2077     04FE  110D               	bcf	13,2	;volatile
  2078                           
  2079                           ;program.c: 38:     ANSELBbits.ANSB1 = 0;
  2080     04FF  108D               	bcf	13,1	;volatile
  2081                           
  2082                           ;program.c: 40:     LATBbits.LATB5 = 0;
  2083     0500  0022               	movlb	2	; select bank2
  2084     0501  128D               	bcf	13,5	;volatile
  2085                           
  2086                           ;program.c: 41:     LATBbits.LATB4 = 0;
  2087     0502  120D               	bcf	13,4	;volatile
  2088                           
  2089                           ;program.c: 42:     LATBbits.LATB3 = 0;
  2090     0503  118D               	bcf	13,3	;volatile
  2091                           
  2092                           ;program.c: 43:     LATBbits.LATB2 = 0;
  2093     0504  110D               	bcf	13,2	;volatile
  2094                           
  2095                           ;program.c: 44:     LATBbits.LATB1 = 0;
  2096     0505  108D               	bcf	13,1	;volatile
  2097                           
  2098                           ;program.c: 45:     LATCbits.LATC5 = 0;
  2099     0506  128E               	bcf	14,5	;volatile
  2100                           
  2101                           ;program.c: 47:     TRISAbits.TRISA1 = 1;
  2102     0507  0021               	movlb	1	; select bank1
  2103     0508  148C               	bsf	12,1	;volatile
  2104                           
  2105                           ;program.c: 48:     TRISAbits.TRISA2 = 1;
  2106     0509  150C               	bsf	12,2	;volatile
  2107                           
  2108                           ;program.c: 49:     TRISAbits.TRISA3 = 1;
  2109     050A  158C               	bsf	12,3	;volatile
  2110                           
  2111                           ;program.c: 50:     TRISAbits.TRISA4 = 1;
  2112     050B  160C               	bsf	12,4	;volatile
  2113                           
  2114                           ;program.c: 52:     ANSELAbits.ANSA1 = 0;
  2115     050C  0023               	movlb	3	; select bank3
  2116     050D  108C               	bcf	12,1	;volatile
  2117                           
  2118                           ;program.c: 53:     ANSELAbits.ANSA2 = 0;
  2119     050E  110C               	bcf	12,2	;volatile
  2120                           
  2121                           ;program.c: 54:     ANSELAbits.ANSA3 = 0;
  2122     050F  118C               	bcf	12,3	;volatile
  2123                           
  2124                           ;program.c: 55:     ANSELAbits.ANSA4 = 0;
  2125     0510  120C               	bcf	12,4	;volatile
  2126                           
  2127                           ;program.c: 58:     TRISCbits.TRISC3 = 1;
  2128     0511  0021               	movlb	1	; select bank1
  2129     0512  158E               	bsf	14,3	;volatile
  2130                           
  2131                           ;program.c: 59:     APFCONbits.SCKSEL = 0;
  2132     0513  0022               	movlb	2	; select bank2
  2133     0514  121D               	bcf	29,4	;volatile
  2134                           
  2135                           ;program.c: 62:     TRISCbits.TRISC4 = 1;
  2136     0515  0021               	movlb	1	; select bank1
  2137     0516  160E               	bsf	14,4	;volatile
  2138                           
  2139                           ;program.c: 63:     APFCONbits.SDISEL = 0;
  2140     0517  0022               	movlb	2	; select bank2
  2141     0518  119D               	bcf	29,3	;volatile
  2142     0519                     l1501:
  2143                           
  2144                           ;program.c: 65:     lcd_Initialize();
  2145     0519  3184  2414  3184   	fcall	_lcd_Initialize
  2146     051C                     l1503:
  2147                           
  2148                           ;program.c: 67:     lcd_Goto(0, 0);
  2149     051C  01F6               	clrf	lcd_Goto@x
  2150     051D  3000               	movlw	0
  2151     051E  3183  23CE  3184   	fcall	_lcd_Goto
  2152     0521                     l1505:
  2153                           
  2154                           ;program.c: 68:     lcd_PrintString("I2C Master");
  2155     0521  3000               	movlw	low (STR_1| (0+32768))
  2156     0522  00F6               	movwf	lcd_PrintString@string
  2157     0523  3088               	movlw	high (STR_1| (0+32768))
  2158     0524  00F7               	movwf	lcd_PrintString@string+1
  2159     0525  3183  2388  3184   	fcall	_lcd_PrintString
  2160     0528                     l1507:
  2161                           
  2162                           ;program.c: 69:     lcd_Goto(1, 0);
  2163     0528  01F6               	clrf	lcd_Goto@x
  2164     0529  3001               	movlw	1
  2165     052A  3183  23CE  3184   	fcall	_lcd_Goto
  2166     052D                     l1509:
  2167                           
  2168                           ;program.c: 70:     lcd_PrintDigitInt32(0, 2, 0, 1);
  2169     052D  3000               	movlw	0
  2170     052E  0020               	movlb	0	; select bank0
  2171     052F  00A3               	movwf	lcd_PrintDigitInt32@number+3
  2172     0530  3000               	movlw	0
  2173     0531  00A2               	movwf	lcd_PrintDigitInt32@number+2
  2174     0532  3000               	movlw	0
  2175     0533  00A1               	movwf	lcd_PrintDigitInt32@number+1
  2176     0534  3000               	movlw	0
  2177     0535  00A0               	movwf	lcd_PrintDigitInt32@number
  2178     0536  3002               	movlw	2
  2179     0537  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  2180     0538  01A5               	clrf	lcd_PrintDigitInt32@enSign
  2181     0539  01A6               	clrf	lcd_PrintDigitInt32@enZero
  2182     053A  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  2183     053B  3187  2729  3184   	fcall	_lcd_PrintDigitInt32
  2184     053E                     l1511:
  2185                           
  2186                           ;program.c: 72:     i2c_Initialize(32000000, 600);
  2187     053E  3001               	movlw	1
  2188     053F  0020               	movlb	0	; select bank0
  2189     0540  00A3               	movwf	i2c_Initialize@fosc+3
  2190     0541  30E8               	movlw	232
  2191     0542  00A2               	movwf	i2c_Initialize@fosc+2
  2192     0543  3048               	movlw	72
  2193     0544  00A1               	movwf	i2c_Initialize@fosc+1
  2194     0545  3000               	movlw	0
  2195     0546  00A0               	movwf	i2c_Initialize@fosc
  2196     0547  3058               	movlw	88
  2197     0548  00A4               	movwf	i2c_Initialize@baudrate
  2198     0549  3002               	movlw	2
  2199     054A  00A5               	movwf	i2c_Initialize@baudrate+1
  2200     054B  3184  2447  3184   	fcall	_i2c_Initialize
  2201     054E                     l87:
  2202     054E  0008               	return
  2203     054F                     __end_of_programInitialize:
  2204                           
  2205                           	psect	text10
  2206     0729                     __ptext10:	
  2207 ;; *************** function _lcd_PrintDigitInt32 *****************
  2208 ;; Defined at:
  2209 ;;		line 243 in file "program.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  number          4    0[BANK0 ] long 
  2212 ;;  noDigit         1    4[BANK0 ] unsigned char 
  2213 ;;  enSign          1    5[BANK0 ] _Bool 
  2214 ;;  enZero          1    6[BANK0 ] _Bool 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  tempN           4   33[BANK0 ] long 
  2217 ;;  tempC           1   37[BANK0 ] unsigned char 
  2218 ;;  numberChar     11   22[BANK0 ] unsigned char [11]
  2219 ;;  numberRevCha   11   11[BANK0 ] unsigned char [11]
  2220 ;;  i1              1   40[BANK0 ] unsigned char 
  2221 ;;  totalDigit      1   39[BANK0 ] unsigned char 
  2222 ;;  i2              1   38[BANK0 ] unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2232 ;;      Params:         0       7       0       0       0       0       0       0
  2233 ;;      Locals:         0      30       0       0       0       0       0       0
  2234 ;;      Temps:          0       4       0       0       0       0       0       0
  2235 ;;      Totals:         0      41       0       0       0       0       0       0
  2236 ;;Total ram usage:       41 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 6
  2239 ;; This function calls:
  2240 ;;		___aldiv
  2241 ;;		___bmul
  2242 ;;		_labs
  2243 ;;		_lcd_PrintChar
  2244 ;;		_lcd_PrintString
  2245 ;;		_memset
  2246 ;; This function is called by:
  2247 ;;		_programInitialize
  2248 ;;		_programLoop
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252     0729                     _lcd_PrintDigitInt32:	
  2253                           ;psect for function _lcd_PrintDigitInt32
  2254                           
  2255     0729                     l1403:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _lcd_PrintDigitInt32: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2258                           
  2259                           
  2260                           ;program.c: 244:     uint8_t i1 = 0,
  2261     0729  0020               	movlb	0	; select bank0
  2262     072A  01C8               	clrf	lcd_PrintDigitInt32@i1
  2263                           
  2264                           ;program.c: 246:             totalDigit = 0;
  2265     072B  01C7               	clrf	lcd_PrintDigitInt32@totalDigit
  2266     072C                     l1405:
  2267                           
  2268                           ;program.c: 248:     char numberRevChar[11];;program.c: 249:     char numberChar[11];;pr
      +                          ogram.c: 251:     memset(numberRevChar, 0, 11);
  2269     072C  302B               	movlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2270     072D  00F0               	movwf	memset@dest
  2271     072E  3000               	movlw	0
  2272     072F  00F1               	movwf	memset@c
  2273     0730  00F2               	movwf	memset@c+1
  2274     0731  300B               	movlw	11
  2275     0732  00F3               	movwf	memset@n
  2276     0733  3000               	movlw	0
  2277     0734  00F4               	movwf	memset@n+1
  2278     0735  3183  239F  3187   	fcall	_memset
  2279     0738                     l1407:
  2280                           
  2281                           ;program.c: 252:     memset(numberChar, 0, 11);
  2282     0738  3036               	movlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  2283     0739  00F0               	movwf	memset@dest
  2284     073A  3000               	movlw	0
  2285     073B  00F1               	movwf	memset@c
  2286     073C  00F2               	movwf	memset@c+1
  2287     073D  300B               	movlw	11
  2288     073E  00F3               	movwf	memset@n
  2289     073F  3000               	movlw	0
  2290     0740  00F4               	movwf	memset@n+1
  2291     0741  3183  239F  3187   	fcall	_memset
  2292     0744                     l1409:
  2293                           
  2294                           ;program.c: 254:     if(number<0) {
  2295     0744  0020               	movlb	0	; select bank0
  2296     0745  1FA3               	btfss	lcd_PrintDigitInt32@number+3,7
  2297     0746  2F48               	goto	u811
  2298     0747  2F49               	goto	u810
  2299     0748                     u811:
  2300     0748  2F68               	goto	l1415
  2301     0749                     u810:
  2302     0749                     l1411:
  2303                           
  2304                           ;program.c: 255:         if(enSign) lcd_PrintChar('-');
  2305     0749  0825               	movf	lcd_PrintDigitInt32@enSign,w
  2306     074A  1903               	btfsc	3,2
  2307     074B  2F4D               	goto	u821
  2308     074C  2F4E               	goto	u820
  2309     074D                     u821:
  2310     074D  2F52               	goto	l143
  2311     074E                     u820:
  2312     074E                     l1413:
  2313     074E  302D               	movlw	45
  2314     074F  3182  22D4  3187   	fcall	_lcd_PrintChar
  2315     0752                     l143:
  2316                           
  2317                           ;program.c: 256:         number = labs(number);
  2318     0752  0020               	movlb	0	; select bank0
  2319     0753  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2320     0754  00F3               	movwf	labs@a+3
  2321     0755  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2322     0756  00F2               	movwf	labs@a+2
  2323     0757  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2324     0758  00F1               	movwf	labs@a+1
  2325     0759  0820               	movf	lcd_PrintDigitInt32@number,w
  2326     075A  00F0               	movwf	labs@a
  2327     075B  3183  235D  3187   	fcall	_labs
  2328     075E  0873               	movf	?_labs+3,w
  2329     075F  0020               	movlb	0	; select bank0
  2330     0760  00A3               	movwf	lcd_PrintDigitInt32@number+3
  2331     0761  0872               	movf	?_labs+2,w
  2332     0762  00A2               	movwf	lcd_PrintDigitInt32@number+2
  2333     0763  0871               	movf	?_labs+1,w
  2334     0764  00A1               	movwf	lcd_PrintDigitInt32@number+1
  2335     0765  0870               	movf	?_labs,w
  2336     0766  00A0               	movwf	lcd_PrintDigitInt32@number
  2337                           
  2338                           ;program.c: 257:     } else {
  2339     0767  2F71               	goto	l1419
  2340     0768                     l1415:
  2341                           
  2342                           ;program.c: 258:         if(enSign) lcd_PrintChar(' ');
  2343     0768  0825               	movf	lcd_PrintDigitInt32@enSign,w
  2344     0769  1903               	btfsc	3,2
  2345     076A  2F6C               	goto	u831
  2346     076B  2F6D               	goto	u830
  2347     076C                     u831:
  2348     076C  2F71               	goto	l1419
  2349     076D                     u830:
  2350     076D                     l1417:
  2351     076D  3020               	movlw	32
  2352     076E  3182  22D4  3187   	fcall	_lcd_PrintChar
  2353     0771                     l1419:
  2354                           
  2355                           ;program.c: 262:         int32_t tempN = number;
  2356     0771  0020               	movlb	0	; select bank0
  2357     0772  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2358     0773  00C4               	movwf	lcd_PrintDigitInt32@tempN+3
  2359     0774  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2360     0775  00C3               	movwf	lcd_PrintDigitInt32@tempN+2
  2361     0776  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2362     0777  00C2               	movwf	lcd_PrintDigitInt32@tempN+1
  2363     0778  0820               	movf	lcd_PrintDigitInt32@number,w
  2364     0779  00C1               	movwf	lcd_PrintDigitInt32@tempN
  2365     077A                     l1421:
  2366                           
  2367                           ;program.c: 263:         number /= 10;
  2368     077A  3000               	movlw	0
  2369     077B  00F3               	movwf	___aldiv@divisor+3
  2370     077C  3000               	movlw	0
  2371     077D  00F2               	movwf	___aldiv@divisor+2
  2372     077E  3000               	movlw	0
  2373     077F  00F1               	movwf	___aldiv@divisor+1
  2374     0780  300A               	movlw	10
  2375     0781  00F0               	movwf	___aldiv@divisor
  2376     0782  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2377     0783  00F7               	movwf	___aldiv@dividend+3
  2378     0784  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2379     0785  00F6               	movwf	___aldiv@dividend+2
  2380     0786  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2381     0787  00F5               	movwf	___aldiv@dividend+1
  2382     0788  0820               	movf	lcd_PrintDigitInt32@number,w
  2383     0789  00F4               	movwf	___aldiv@dividend
  2384     078A  3185  25D7  3187   	fcall	___aldiv
  2385     078D  0873               	movf	?___aldiv+3,w
  2386     078E  0020               	movlb	0	; select bank0
  2387     078F  00A3               	movwf	lcd_PrintDigitInt32@number+3
  2388     0790  0872               	movf	?___aldiv+2,w
  2389     0791  00A2               	movwf	lcd_PrintDigitInt32@number+2
  2390     0792  0871               	movf	?___aldiv+1,w
  2391     0793  00A1               	movwf	lcd_PrintDigitInt32@number+1
  2392     0794  0870               	movf	?___aldiv,w
  2393     0795  00A0               	movwf	lcd_PrintDigitInt32@number
  2394     0796                     l1423:
  2395                           
  2396                           ;program.c: 264:         char tempC = (char)(tempN -10 * number);
  2397     0796  30F6               	movlw	246
  2398     0797  00F0               	movwf	___bmul@multiplicand
  2399     0798  0820               	movf	lcd_PrintDigitInt32@number,w
  2400     0799  3183  2324  3187   	fcall	___bmul
  2401     079C  0020               	movlb	0	; select bank0
  2402     079D  0741               	addwf	lcd_PrintDigitInt32@tempN,w
  2403     079E  00C5               	movwf	lcd_PrintDigitInt32@tempC
  2404     079F                     l1425:
  2405                           
  2406                           ;program.c: 265:         numberRevChar[i1] = tempC + 48;
  2407     079F  0848               	movf	lcd_PrintDigitInt32@i1,w
  2408     07A0  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2409     07A1  0086               	movwf	6
  2410     07A2  0187               	clrf	7
  2411     07A3  0845               	movf	lcd_PrintDigitInt32@tempC,w
  2412     07A4  3E30               	addlw	48
  2413     07A5  0081               	movwf	1
  2414     07A6                     l1427:
  2415                           
  2416                           ;program.c: 266:         i1++;
  2417     07A6  3001               	movlw	1
  2418     07A7  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  2419     07A8                     l1429:
  2420                           
  2421                           ;program.c: 267:     } while(number);
  2422     07A8  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2423     07A9  0422               	iorwf	lcd_PrintDigitInt32@number+2,w
  2424     07AA  0421               	iorwf	lcd_PrintDigitInt32@number+1,w
  2425     07AB  0420               	iorwf	lcd_PrintDigitInt32@number,w
  2426     07AC  1D03               	skipz
  2427     07AD  2FAF               	goto	u841
  2428     07AE  2FB0               	goto	u840
  2429     07AF                     u841:
  2430     07AF  2F71               	goto	l1419
  2431     07B0                     u840:
  2432     07B0                     l1431:
  2433                           
  2434                           ;program.c: 269:     totalDigit = i1;
  2435     07B0  0848               	movf	lcd_PrintDigitInt32@i1,w
  2436     07B1  00C7               	movwf	lcd_PrintDigitInt32@totalDigit
  2437     07B2                     l1433:
  2438                           
  2439                           ;program.c: 271:     for(i1=0; i1<(noDigit-totalDigit); i1++) {
  2440     07B2  01C8               	clrf	lcd_PrintDigitInt32@i1
  2441     07B3  2FC6               	goto	l1443
  2442     07B4                     l1435:
  2443                           
  2444                           ;program.c: 272:         if(enZero) lcd_PrintChar('0');
  2445     07B4  0020               	movlb	0	; select bank0
  2446     07B5  0826               	movf	lcd_PrintDigitInt32@enZero,w
  2447     07B6  1903               	btfsc	3,2
  2448     07B7  2FB9               	goto	u851
  2449     07B8  2FBA               	goto	u850
  2450     07B9                     u851:
  2451     07B9  2FBF               	goto	l1439
  2452     07BA                     u850:
  2453     07BA                     l1437:
  2454     07BA  3030               	movlw	48
  2455     07BB  3182  22D4  3187   	fcall	_lcd_PrintChar
  2456     07BE  2FC3               	goto	l1441
  2457     07BF                     l1439:
  2458     07BF  3020               	movlw	32
  2459     07C0  3182  22D4  3187   	fcall	_lcd_PrintChar
  2460     07C3                     l1441:
  2461                           
  2462                           ;program.c: 274:     }
  2463     07C3  3001               	movlw	1
  2464     07C4  0020               	movlb	0	; select bank0
  2465     07C5  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  2466     07C6                     l1443:
  2467     07C6  0824               	movf	lcd_PrintDigitInt32@noDigit,w
  2468     07C7  00A7               	movwf	??_lcd_PrintDigitInt32
  2469     07C8  01A8               	clrf	??_lcd_PrintDigitInt32+1
  2470     07C9  0828               	movf	??_lcd_PrintDigitInt32+1,w
  2471     07CA  00AA               	movwf	??_lcd_PrintDigitInt32+3
  2472     07CB  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  2473     07CC  0227               	subwf	??_lcd_PrintDigitInt32,w
  2474     07CD  00A9               	movwf	??_lcd_PrintDigitInt32+2
  2475     07CE  1C03               	skipc
  2476     07CF  03AA               	decf	??_lcd_PrintDigitInt32+3,f
  2477     07D0  082A               	movf	??_lcd_PrintDigitInt32+3,w
  2478     07D1  3A80               	xorlw	128
  2479     07D2  3C80               	sublw	128
  2480     07D3  1D03               	skipz
  2481     07D4  2FD7               	goto	u865
  2482     07D5  0829               	movf	??_lcd_PrintDigitInt32+2,w
  2483     07D6  0248               	subwf	lcd_PrintDigitInt32@i1,w
  2484     07D7                     u865:
  2485     07D7  1C03               	skipc
  2486     07D8  2FDA               	goto	u861
  2487     07D9  2FDB               	goto	u860
  2488     07DA                     u861:
  2489     07DA  2FB4               	goto	l1435
  2490     07DB                     u860:
  2491     07DB                     l1445:
  2492                           
  2493                           ;program.c: 276:     for(i1=totalDigit, i2=0; i1>0; i1--, i2++) {
  2494     07DB  0020               	movlb	0	; select bank0
  2495     07DC  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  2496     07DD  00C8               	movwf	lcd_PrintDigitInt32@i1
  2497     07DE                     l1447:
  2498     07DE  01C6               	clrf	lcd_PrintDigitInt32@i2
  2499     07DF                     l1449:
  2500     07DF  0848               	movf	lcd_PrintDigitInt32@i1,w
  2501     07E0  1D03               	btfss	3,2
  2502     07E1  2FE3               	goto	u871
  2503     07E2  2FE4               	goto	u870
  2504     07E3                     u871:
  2505     07E3  2FE5               	goto	l1453
  2506     07E4                     u870:
  2507     07E4  2FF5               	goto	l1461
  2508     07E5                     l1453:
  2509                           
  2510                           ;program.c: 277:         numberChar[i2] = numberRevChar[i1-1];
  2511     07E5  0846               	movf	lcd_PrintDigitInt32@i2,w
  2512     07E6  3E36               	addlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  2513     07E7  0086               	movwf	6
  2514     07E8  0187               	clrf	7
  2515     07E9  0848               	movf	lcd_PrintDigitInt32@i1,w
  2516     07EA  3EFF               	addlw	255
  2517     07EB  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2518     07EC  0084               	movwf	4
  2519     07ED  0185               	clrf	5
  2520     07EE  0800               	movf	0,w
  2521     07EF  0081               	movwf	1
  2522     07F0                     l1455:
  2523                           
  2524                           ;program.c: 278:     }
  2525     07F0  3001               	movlw	1
  2526     07F1  02C8               	subwf	lcd_PrintDigitInt32@i1,f
  2527     07F2                     l1457:
  2528     07F2  3001               	movlw	1
  2529     07F3  07C6               	addwf	lcd_PrintDigitInt32@i2,f
  2530     07F4  2FDF               	goto	l1449
  2531     07F5                     l1461:
  2532                           
  2533                           ;program.c: 280:     lcd_PrintString(numberChar);
  2534     07F5  3036               	movlw	low lcd_PrintDigitInt32@numberChar
  2535     07F6  00F6               	movwf	lcd_PrintString@string
  2536     07F7  3000               	movlw	high lcd_PrintDigitInt32@numberChar
  2537     07F8  00F7               	movwf	lcd_PrintString@string+1
  2538     07F9  3183  2388  3187   	fcall	_lcd_PrintString
  2539     07FC                     l155:
  2540     07FC  0008               	return
  2541     07FD                     __end_of_lcd_PrintDigitInt32:
  2542                           
  2543                           	psect	text11
  2544     039F                     __ptext11:	
  2545 ;; *************** function _memset *****************
  2546 ;; Defined at:
  2547 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  dest            1    0[COMMON] PTR void 
  2550 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  2551 ;;  c               2    1[COMMON] int 
  2552 ;;  n               2    3[COMMON] unsigned int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  p               1    5[COMMON] PTR unsigned char 
  2555 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    0[COMMON] PTR void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2565 ;;      Params:         5       0       0       0       0       0       0       0
  2566 ;;      Locals:         1       0       0       0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0
  2568 ;;      Totals:         6       0       0       0       0       0       0       0
  2569 ;;Total ram usage:        6 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_lcd_PrintDigitInt32
  2575 ;;		_lcd_PrintInt32
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579     039F                     _memset:	
  2580                           ;psect for function _memset
  2581                           
  2582     039F                     l1291:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2585                           
  2586     039F  0870               	movf	memset@dest,w
  2587     03A0  00F5               	movwf	memset@p
  2588     03A1  2BA9               	goto	l1297
  2589     03A2                     l1293:
  2590     03A2  0875               	movf	memset@p,w
  2591     03A3  0086               	movwf	6
  2592     03A4  0187               	clrf	7
  2593     03A5  0871               	movf	memset@c,w
  2594     03A6  0081               	movwf	1
  2595     03A7                     l1295:
  2596     03A7  3001               	movlw	1
  2597     03A8  07F5               	addwf	memset@p,f
  2598     03A9                     l1297:
  2599     03A9  3001               	movlw	1
  2600     03AA  02F3               	subwf	memset@n,f
  2601     03AB  3000               	movlw	0
  2602     03AC  3BF4               	subwfb	memset@n+1,f
  2603     03AD  0A73               	incf	memset@n,w
  2604     03AE  1D03               	skipz
  2605     03AF  2BB4               	goto	u601
  2606     03B0  0A74               	incf	memset@n+1,w
  2607     03B1  1D03               	btfss	3,2
  2608     03B2  2BB4               	goto	u601
  2609     03B3  2BB5               	goto	u600
  2610     03B4                     u601:
  2611     03B4  2BA2               	goto	l1293
  2612     03B5                     u600:
  2613     03B5                     l813:
  2614     03B5  0008               	return
  2615     03B6                     __end_of_memset:
  2616                           
  2617                           	psect	text12
  2618     0388                     __ptext12:	
  2619 ;; *************** function _lcd_PrintString *****************
  2620 ;; Defined at:
  2621 ;;		line 203 in file "program.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  string          2    6[COMMON] PTR unsigned char 
  2624 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintInt32@numberChar(11), STR_1(11), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2636 ;;      Params:         2       0       0       0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0
  2638 ;;      Temps:          1       0       0       0       0       0       0       0
  2639 ;;      Totals:         3       0       0       0       0       0       0       0
  2640 ;;Total ram usage:        3 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 5
  2643 ;; This function calls:
  2644 ;;		_lcd_PrintChar
  2645 ;; This function is called by:
  2646 ;;		_programInitialize
  2647 ;;		_lcd_PrintDigitInt32
  2648 ;;		_lcd_PrintInt32
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652     0388                     _lcd_PrintString:	
  2653                           ;psect for function _lcd_PrintString
  2654                           
  2655     0388                     l1279:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2658                           
  2659                           
  2660                           ;program.c: 204:     while(*string!=0) {
  2661     0388  2B95               	goto	l1285
  2662     0389                     l1281:
  2663                           
  2664                           ;program.c: 205:         lcd_PrintChar(*string);
  2665     0389  0876               	movf	lcd_PrintString@string,w
  2666     038A  0084               	movwf	4
  2667     038B  0877               	movf	lcd_PrintString@string+1,w
  2668     038C  0085               	movwf	5
  2669     038D  0800               	movf	0,w	;code access
  2670     038E  3182  22D4  3183   	fcall	_lcd_PrintChar
  2671     0391                     l1283:
  2672                           
  2673                           ;program.c: 206:         string++;
  2674     0391  3001               	movlw	1
  2675     0392  07F6               	addwf	lcd_PrintString@string,f
  2676     0393  3000               	movlw	0
  2677     0394  3DF7               	addwfc	lcd_PrintString@string+1,f
  2678     0395                     l1285:
  2679                           
  2680                           ;program.c: 204:     while(*string!=0) {
  2681     0395  0876               	movf	lcd_PrintString@string,w
  2682     0396  0084               	movwf	4
  2683     0397  0877               	movf	lcd_PrintString@string+1,w
  2684     0398  0085               	movwf	5
  2685     0399  0012               	moviw fsr0++
  2686     039A  1D03               	btfss	3,2
  2687     039B  2B9D               	goto	u591
  2688     039C  2B9E               	goto	u590
  2689     039D                     u591:
  2690     039D  2B89               	goto	l1281
  2691     039E                     u590:
  2692     039E                     l131:
  2693     039E  0008               	return
  2694     039F                     __end_of_lcd_PrintString:
  2695                           
  2696                           	psect	text13
  2697     02D4                     __ptext13:	
  2698 ;; *************** function _lcd_PrintChar *****************
  2699 ;; Defined at:
  2700 ;;		line 196 in file "program.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  character       1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  character       1    5[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2714 ;;      Params:         0       0       0       0       0       0       0       0
  2715 ;;      Locals:         1       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0
  2717 ;;      Totals:         1       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        1 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 4
  2721 ;; This function calls:
  2722 ;;		_lcd_DelaySetupTime
  2723 ;;		_lcd_WriteData
  2724 ;; This function is called by:
  2725 ;;		_lcd_PrintString
  2726 ;;		_lcd_PrintDigitInt32
  2727 ;;		_lcd_PrintInt32
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731     02D4                     _lcd_PrintChar:	
  2732                           ;psect for function _lcd_PrintChar
  2733                           
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _lcd_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  2737                           ;lcd_PrintChar@character stored from wreg
  2738     02D4  00F5               	movwf	lcd_PrintChar@character
  2739     02D5                     l1267:
  2740                           
  2741                           ;program.c: 197:     LATBbits.LATB5 = 1;
  2742     02D5  0022               	movlb	2	; select bank2
  2743     02D6  168D               	bsf	13,5	;volatile
  2744     02D7                     l1269:
  2745                           
  2746                           ;program.c: 198:     lcd_DelaySetupTime();
  2747     02D7  3182  22AC  3182   	fcall	_lcd_DelaySetupTime
  2748                           
  2749                           ;program.c: 200:     lcd_WriteData(character);
  2750     02DA  0875               	movf	lcd_PrintChar@character,w
  2751     02DB  3185  254F  3182   	fcall	_lcd_WriteData
  2752     02DE                     l125:
  2753     02DE  0008               	return
  2754     02DF                     __end_of_lcd_PrintChar:
  2755                           
  2756                           	psect	text14
  2757     035D                     __ptext14:	
  2758 ;; *************** function _labs *****************
  2759 ;; Defined at:
  2760 ;;		line 1 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  a               4    0[COMMON] long 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  4    0[COMMON] long 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2774 ;;      Params:         4       0       0       0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0
  2777 ;;      Totals:         4       0       0       0       0       0       0       0
  2778 ;;Total ram usage:        4 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_lcd_PrintDigitInt32
  2784 ;;		_lcd_PrintInt32
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788     035D                     _labs:	
  2789                           ;psect for function _labs
  2790                           
  2791     035D                     l1299:	
  2792                           ;incstack = 0
  2793                           ; Regs used in _labs: [wreg+status,2+status,0]
  2794                           
  2795     035D  1BF3               	btfsc	labs@a+3,7
  2796     035E  2B60               	goto	u611
  2797     035F  2B61               	goto	u610
  2798     0360                     u611:
  2799     0360  2B62               	goto	l1303
  2800     0361                     u610:
  2801     0361                     l1301:
  2802     0361  2B71               	goto	l807
  2803     0362                     l1303:
  2804     0362  0970               	comf	labs@a,w
  2805     0363  00F0               	movwf	?_labs
  2806     0364  0971               	comf	labs@a+1,w
  2807     0365  00F1               	movwf	?_labs+1
  2808     0366  0972               	comf	labs@a+2,w
  2809     0367  00F2               	movwf	?_labs+2
  2810     0368  0973               	comf	labs@a+3,w
  2811     0369  00F3               	movwf	?_labs+3
  2812     036A  0AF0               	incf	?_labs,f
  2813     036B  1903               	skipnz
  2814     036C  0AF1               	incf	?_labs+1,f
  2815     036D  1903               	skipnz
  2816     036E  0AF2               	incf	?_labs+2,f
  2817     036F  1903               	skipnz
  2818     0370  0AF3               	incf	?_labs+3,f
  2819     0371                     l807:
  2820     0371  0008               	return
  2821     0372                     __end_of_labs:
  2822                           
  2823                           	psect	text15
  2824     0324                     __ptext15:	
  2825 ;; *************** function ___bmul *****************
  2826 ;; Defined at:
  2827 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/Umul8.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  multiplier      1    wreg     unsigned char 
  2830 ;;  multiplicand    1    0[COMMON] unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  multiplier      1    2[COMMON] unsigned char 
  2833 ;;  product         1    1[COMMON] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      unsigned char 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2843 ;;      Params:         1       0       0       0       0       0       0       0
  2844 ;;      Locals:         2       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0
  2846 ;;      Totals:         3       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        3 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_lcd_PrintDigitInt32
  2853 ;;		_lcd_PrintInt32
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857     0324                     ___bmul:	
  2858                           ;psect for function ___bmul
  2859                           
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2863                           ;___bmul@multiplier stored from wreg
  2864     0324  00F2               	movwf	___bmul@multiplier
  2865     0325                     l1311:
  2866     0325  01F1               	clrf	___bmul@product
  2867     0326                     l1313:
  2868     0326  1C72               	btfss	___bmul@multiplier,0
  2869     0327  2B29               	goto	u621
  2870     0328  2B2A               	goto	u620
  2871     0329                     u621:
  2872     0329  2B2C               	goto	l1317
  2873     032A                     u620:
  2874     032A                     l1315:
  2875     032A  0870               	movf	___bmul@multiplicand,w
  2876     032B  07F1               	addwf	___bmul@product,f
  2877     032C                     l1317:
  2878     032C  1003               	clrc
  2879     032D  0DF0               	rlf	___bmul@multiplicand,f
  2880     032E                     l1319:
  2881     032E  1003               	clrc
  2882     032F  0CF2               	rrf	___bmul@multiplier,f
  2883     0330  0872               	movf	___bmul@multiplier,w
  2884     0331  1D03               	btfss	3,2
  2885     0332  2B34               	goto	u631
  2886     0333  2B35               	goto	u630
  2887     0334                     u631:
  2888     0334  2B26               	goto	l1313
  2889     0335                     u630:
  2890     0335                     l1321:
  2891     0335  0871               	movf	___bmul@product,w
  2892     0336                     l370:
  2893     0336  0008               	return
  2894     0337                     __end_of___bmul:
  2895                           
  2896                           	psect	text16
  2897     05D7                     __ptext16:	
  2898 ;; *************** function ___aldiv *****************
  2899 ;; Defined at:
  2900 ;;		line 5 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/aldiv.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  divisor         4    0[COMMON] long 
  2903 ;;  dividend        4    4[COMMON] long 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  quotient        4   10[COMMON] long 
  2906 ;;  sign            1    9[COMMON] unsigned char 
  2907 ;;  counter         1    8[COMMON] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  4    0[COMMON] long 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2917 ;;      Params:         8       0       0       0       0       0       0       0
  2918 ;;      Locals:         6       0       0       0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0
  2920 ;;      Totals:        14       0       0       0       0       0       0       0
  2921 ;;Total ram usage:       14 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_lcd_PrintDigitInt32
  2927 ;;		_lcd_PrintInt32
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931     05D7                     ___aldiv:	
  2932                           ;psect for function ___aldiv
  2933                           
  2934     05D7                     l1349:	
  2935                           ;incstack = 0
  2936                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2937                           
  2938     05D7  01F9               	clrf	___aldiv@sign
  2939     05D8                     l1351:
  2940     05D8  1FF3               	btfss	___aldiv@divisor+3,7
  2941     05D9  2DDB               	goto	u711
  2942     05DA  2DDC               	goto	u710
  2943     05DB                     u711:
  2944     05DB  2DE9               	goto	l409
  2945     05DC                     u710:
  2946     05DC                     l1353:
  2947     05DC  09F0               	comf	___aldiv@divisor,f
  2948     05DD  09F1               	comf	___aldiv@divisor+1,f
  2949     05DE  09F2               	comf	___aldiv@divisor+2,f
  2950     05DF  09F3               	comf	___aldiv@divisor+3,f
  2951     05E0  0AF0               	incf	___aldiv@divisor,f
  2952     05E1  1903               	skipnz
  2953     05E2  0AF1               	incf	___aldiv@divisor+1,f
  2954     05E3  1903               	skipnz
  2955     05E4  0AF2               	incf	___aldiv@divisor+2,f
  2956     05E5  1903               	skipnz
  2957     05E6  0AF3               	incf	___aldiv@divisor+3,f
  2958     05E7  3001               	movlw	1
  2959     05E8  00F9               	movwf	___aldiv@sign
  2960     05E9                     l409:
  2961     05E9  1FF7               	btfss	___aldiv@dividend+3,7
  2962     05EA  2DEC               	goto	u721
  2963     05EB  2DED               	goto	u720
  2964     05EC                     u721:
  2965     05EC  2DFA               	goto	l1359
  2966     05ED                     u720:
  2967     05ED                     l1355:
  2968     05ED  09F4               	comf	___aldiv@dividend,f
  2969     05EE  09F5               	comf	___aldiv@dividend+1,f
  2970     05EF  09F6               	comf	___aldiv@dividend+2,f
  2971     05F0  09F7               	comf	___aldiv@dividend+3,f
  2972     05F1  0AF4               	incf	___aldiv@dividend,f
  2973     05F2  1903               	skipnz
  2974     05F3  0AF5               	incf	___aldiv@dividend+1,f
  2975     05F4  1903               	skipnz
  2976     05F5  0AF6               	incf	___aldiv@dividend+2,f
  2977     05F6  1903               	skipnz
  2978     05F7  0AF7               	incf	___aldiv@dividend+3,f
  2979     05F8                     l1357:
  2980     05F8  3001               	movlw	1
  2981     05F9  06F9               	xorwf	___aldiv@sign,f
  2982     05FA                     l1359:
  2983     05FA  3000               	movlw	0
  2984     05FB  00FD               	movwf	___aldiv@quotient+3
  2985     05FC  3000               	movlw	0
  2986     05FD  00FC               	movwf	___aldiv@quotient+2
  2987     05FE  3000               	movlw	0
  2988     05FF  00FB               	movwf	___aldiv@quotient+1
  2989     0600  3000               	movlw	0
  2990     0601  00FA               	movwf	___aldiv@quotient
  2991     0602                     l1361:
  2992     0602  0873               	movf	___aldiv@divisor+3,w
  2993     0603  0472               	iorwf	___aldiv@divisor+2,w
  2994     0604  0471               	iorwf	___aldiv@divisor+1,w
  2995     0605  0470               	iorwf	___aldiv@divisor,w
  2996     0606  1903               	skipnz
  2997     0607  2E09               	goto	u731
  2998     0608  2E0A               	goto	u730
  2999     0609                     u731:
  3000     0609  2E49               	goto	l1381
  3001     060A                     u730:
  3002     060A                     l1363:
  3003     060A  3001               	movlw	1
  3004     060B  00F8               	movwf	___aldiv@counter
  3005     060C  2E16               	goto	l1367
  3006     060D                     l1365:
  3007     060D  3001               	movlw	1
  3008     060E                     u745:
  3009     060E  35F0               	lslf	___aldiv@divisor,f
  3010     060F  0DF1               	rlf	___aldiv@divisor+1,f
  3011     0610  0DF2               	rlf	___aldiv@divisor+2,f
  3012     0611  0DF3               	rlf	___aldiv@divisor+3,f
  3013     0612  0B89               	decfsz	9,f
  3014     0613  2E0E               	goto	u745
  3015     0614  3001               	movlw	1
  3016     0615  07F8               	addwf	___aldiv@counter,f
  3017     0616                     l1367:
  3018     0616  1FF3               	btfss	___aldiv@divisor+3,7
  3019     0617  2E19               	goto	u751
  3020     0618  2E1A               	goto	u750
  3021     0619                     u751:
  3022     0619  2E0D               	goto	l1365
  3023     061A                     u750:
  3024     061A                     l1369:
  3025     061A  3001               	movlw	1
  3026     061B                     u765:
  3027     061B  35FA               	lslf	___aldiv@quotient,f
  3028     061C  0DFB               	rlf	___aldiv@quotient+1,f
  3029     061D  0DFC               	rlf	___aldiv@quotient+2,f
  3030     061E  0DFD               	rlf	___aldiv@quotient+3,f
  3031     061F  0B89               	decfsz	9,f
  3032     0620  2E1B               	goto	u765
  3033     0621                     l1371:
  3034     0621  0873               	movf	___aldiv@divisor+3,w
  3035     0622  0277               	subwf	___aldiv@dividend+3,w
  3036     0623  1D03               	skipz
  3037     0624  2E2F               	goto	u775
  3038     0625  0872               	movf	___aldiv@divisor+2,w
  3039     0626  0276               	subwf	___aldiv@dividend+2,w
  3040     0627  1D03               	skipz
  3041     0628  2E2F               	goto	u775
  3042     0629  0871               	movf	___aldiv@divisor+1,w
  3043     062A  0275               	subwf	___aldiv@dividend+1,w
  3044     062B  1D03               	skipz
  3045     062C  2E2F               	goto	u775
  3046     062D  0870               	movf	___aldiv@divisor,w
  3047     062E  0274               	subwf	___aldiv@dividend,w
  3048     062F                     u775:
  3049     062F  1C03               	skipc
  3050     0630  2E32               	goto	u771
  3051     0631  2E33               	goto	u770
  3052     0632                     u771:
  3053     0632  2E3C               	goto	l1377
  3054     0633                     u770:
  3055     0633                     l1373:
  3056     0633  0870               	movf	___aldiv@divisor,w
  3057     0634  02F4               	subwf	___aldiv@dividend,f
  3058     0635  0871               	movf	___aldiv@divisor+1,w
  3059     0636  3BF5               	subwfb	___aldiv@dividend+1,f
  3060     0637  0872               	movf	___aldiv@divisor+2,w
  3061     0638  3BF6               	subwfb	___aldiv@dividend+2,f
  3062     0639  0873               	movf	___aldiv@divisor+3,w
  3063     063A  3BF7               	subwfb	___aldiv@dividend+3,f
  3064     063B                     l1375:
  3065     063B  147A               	bsf	___aldiv@quotient,0
  3066     063C                     l1377:
  3067     063C  3001               	movlw	1
  3068     063D                     u785:
  3069     063D  36F3               	lsrf	___aldiv@divisor+3,f
  3070     063E  0CF2               	rrf	___aldiv@divisor+2,f
  3071     063F  0CF1               	rrf	___aldiv@divisor+1,f
  3072     0640  0CF0               	rrf	___aldiv@divisor,f
  3073     0641  0B89               	decfsz	9,f
  3074     0642  2E3D               	goto	u785
  3075     0643                     l1379:
  3076     0643  3001               	movlw	1
  3077     0644  02F8               	subwf	___aldiv@counter,f
  3078     0645  1D03               	btfss	3,2
  3079     0646  2E48               	goto	u791
  3080     0647  2E49               	goto	u790
  3081     0648                     u791:
  3082     0648  2E1A               	goto	l1369
  3083     0649                     u790:
  3084     0649                     l1381:
  3085     0649  0879               	movf	___aldiv@sign,w
  3086     064A  1903               	btfsc	3,2
  3087     064B  2E4D               	goto	u801
  3088     064C  2E4E               	goto	u800
  3089     064D                     u801:
  3090     064D  2E59               	goto	l1385
  3091     064E                     u800:
  3092     064E                     l1383:
  3093     064E  09FA               	comf	___aldiv@quotient,f
  3094     064F  09FB               	comf	___aldiv@quotient+1,f
  3095     0650  09FC               	comf	___aldiv@quotient+2,f
  3096     0651  09FD               	comf	___aldiv@quotient+3,f
  3097     0652  0AFA               	incf	___aldiv@quotient,f
  3098     0653  1903               	skipnz
  3099     0654  0AFB               	incf	___aldiv@quotient+1,f
  3100     0655  1903               	skipnz
  3101     0656  0AFC               	incf	___aldiv@quotient+2,f
  3102     0657  1903               	skipnz
  3103     0658  0AFD               	incf	___aldiv@quotient+3,f
  3104     0659                     l1385:
  3105     0659  087D               	movf	___aldiv@quotient+3,w
  3106     065A  00F3               	movwf	?___aldiv+3
  3107     065B  087C               	movf	___aldiv@quotient+2,w
  3108     065C  00F2               	movwf	?___aldiv+2
  3109     065D  087B               	movf	___aldiv@quotient+1,w
  3110     065E  00F1               	movwf	?___aldiv+1
  3111     065F  087A               	movf	___aldiv@quotient,w
  3112     0660  00F0               	movwf	?___aldiv
  3113     0661                     l419:
  3114     0661  0008               	return
  3115     0662                     __end_of___aldiv:
  3116                           
  3117                           	psect	text17
  3118     0414                     __ptext17:	
  3119 ;; *************** function _lcd_Initialize *****************
  3120 ;; Defined at:
  3121 ;;		line 155 in file "program.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3135 ;;      Params:         0       0       0       0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0
  3138 ;;      Totals:         0       0       0       0       0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 5
  3142 ;; This function calls:
  3143 ;;		_delay_ms
  3144 ;;		_delay_x24o25us
  3145 ;;		_lcd_PrintCmd
  3146 ;; This function is called by:
  3147 ;;		_programInitialize
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151     0414                     _lcd_Initialize:	
  3152                           ;psect for function _lcd_Initialize
  3153                           
  3154     0414                     l1389:	
  3155                           ;incstack = 0
  3156                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3157                           
  3158                           
  3159                           ;program.c: 156:     delay_ms(20);
  3160     0414  3000               	movlw	0
  3161     0415  00F9               	movwf	delay_ms@delay+3
  3162     0416  3000               	movlw	0
  3163     0417  00F8               	movwf	delay_ms@delay+2
  3164     0418  3000               	movlw	0
  3165     0419  00F7               	movwf	delay_ms@delay+1
  3166     041A  3014               	movlw	20
  3167     041B  00F6               	movwf	delay_ms@delay
  3168     041C  3183  23EB  3184   	fcall	_delay_ms
  3169                           
  3170                           ;program.c: 159:     lcd_PrintCmd(0x33);
  3171     041F  3033               	movlw	51
  3172     0420  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3173                           
  3174                           ;program.c: 160:     lcd_PrintCmd(0x32);
  3175     0423  3032               	movlw	50
  3176     0424  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3177                           
  3178                           ;program.c: 163:     lcd_PrintCmd(0x28);
  3179     0427  3028               	movlw	40
  3180     0428  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3181                           
  3182                           ;program.c: 164:     lcd_PrintCmd(0x02);
  3183     042B  3002               	movlw	2
  3184     042C  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3185                           
  3186                           ;program.c: 165:     lcd_PrintCmd(0x0C);
  3187     042F  300C               	movlw	12
  3188     0430  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3189                           
  3190                           ;program.c: 166:     lcd_PrintCmd(0x06);
  3191     0433  3006               	movlw	6
  3192     0434  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3193                           
  3194                           ;program.c: 167:     lcd_PrintCmd(0x80);
  3195     0437  3080               	movlw	128
  3196     0438  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3197                           
  3198                           ;program.c: 168:     lcd_PrintCmd(0x01);
  3199     043B  3001               	movlw	1
  3200     043C  3182  22C9  3184   	fcall	_lcd_PrintCmd
  3201                           
  3202                           ;program.c: 170:     delay_x24o25us(65);
  3203     043F  3041               	movlw	65
  3204     0440  00F2               	movwf	delay_x24o25us@delay
  3205     0441  3000               	movlw	0
  3206     0442  00F3               	movwf	delay_x24o25us@delay+1
  3207     0443  3183  2372  3184   	fcall	_delay_x24o25us
  3208     0446                     l111:
  3209     0446  0008               	return
  3210     0447                     __end_of_lcd_Initialize:
  3211                           
  3212                           	psect	text18
  3213     03EB                     __ptext18:	
  3214 ;; *************** function _delay_ms *****************
  3215 ;; Defined at:
  3216 ;;		line 15 in file "program.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  delay           4    6[COMMON] unsigned long 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  i               4   10[COMMON] unsigned long 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3230 ;;      Params:         4       0       0       0       0       0       0       0
  3231 ;;      Locals:         4       0       0       0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0
  3233 ;;      Totals:         8       0       0       0       0       0       0       0
  3234 ;;Total ram usage:        8 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 2
  3237 ;; This function calls:
  3238 ;;		_delay_x24o25us
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;;		_programLoop
  3242 ;;		_lcd_Initialize
  3243 ;;		_pb_DelayDebounce
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247     03EB                     _delay_ms:	
  3248                           ;psect for function _delay_ms
  3249                           
  3250     03EB                     l1271:	
  3251                           ;incstack = 0
  3252                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3253                           
  3254                           
  3255                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  3256     03EB  3000               	movlw	0
  3257     03EC  00FD               	movwf	delay_ms@i+3
  3258     03ED  3000               	movlw	0
  3259     03EE  00FC               	movwf	delay_ms@i+2
  3260     03EF  3000               	movlw	0
  3261     03F0  00FB               	movwf	delay_ms@i+1
  3262     03F1  3000               	movlw	0
  3263     03F2  00FA               	movwf	delay_ms@i
  3264     03F3  2C01               	goto	l1277
  3265     03F4                     l1273:
  3266     03F4  3029               	movlw	41
  3267     03F5  00F2               	movwf	delay_x24o25us@delay
  3268     03F6  3000               	movlw	0
  3269     03F7  00F3               	movwf	delay_x24o25us@delay+1
  3270     03F8  3183  2372  3183   	fcall	_delay_x24o25us
  3271     03FB                     l1275:
  3272     03FB  3001               	movlw	1
  3273     03FC  07FA               	addwf	delay_ms@i,f
  3274     03FD  3000               	movlw	0
  3275     03FE  3DFB               	addwfc	delay_ms@i+1,f
  3276     03FF  3DFC               	addwfc	delay_ms@i+2,f
  3277     0400  3DFD               	addwfc	delay_ms@i+3,f
  3278     0401                     l1277:
  3279     0401  0879               	movf	delay_ms@delay+3,w
  3280     0402  027D               	subwf	delay_ms@i+3,w
  3281     0403  1D03               	skipz
  3282     0404  2C0F               	goto	u585
  3283     0405  0878               	movf	delay_ms@delay+2,w
  3284     0406  027C               	subwf	delay_ms@i+2,w
  3285     0407  1D03               	skipz
  3286     0408  2C0F               	goto	u585
  3287     0409  0877               	movf	delay_ms@delay+1,w
  3288     040A  027B               	subwf	delay_ms@i+1,w
  3289     040B  1D03               	skipz
  3290     040C  2C0F               	goto	u585
  3291     040D  0876               	movf	delay_ms@delay,w
  3292     040E  027A               	subwf	delay_ms@i,w
  3293     040F                     u585:
  3294     040F  1C03               	skipc
  3295     0410  2C12               	goto	u581
  3296     0411  2C13               	goto	u580
  3297     0412                     u581:
  3298     0412  2BF4               	goto	l1273
  3299     0413                     u580:
  3300     0413                     l84:
  3301     0413  0008               	return
  3302     0414                     __end_of_delay_ms:
  3303                           
  3304                           	psect	text19
  3305     0372                     __ptext19:	
  3306 ;; *************** function _delay_x24o25us *****************
  3307 ;; Defined at:
  3308 ;;		line 10 in file "program.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  delay           2    2[COMMON] unsigned short 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  i               2    4[COMMON] unsigned short 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3322 ;;      Params:         2       0       0       0       0       0       0       0
  3323 ;;      Locals:         2       0       0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0
  3325 ;;      Totals:         4       0       0       0       0       0       0       0
  3326 ;;Total ram usage:        4 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 1
  3329 ;; This function calls:
  3330 ;;		_delay_x1o5us
  3331 ;; This function is called by:
  3332 ;;		_delay_ms
  3333 ;;		_lcd_Initialize
  3334 ;;		_i2c_MasterStop
  3335 ;;		_lcd_ClearAll
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339     0372                     _delay_x24o25us:	
  3340                           ;psect for function _delay_x24o25us
  3341                           
  3342     0372                     l1259:	
  3343                           ;incstack = 0
  3344                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  3345                           
  3346                           
  3347                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  3348     0372  01F4               	clrf	delay_x24o25us@i
  3349     0373  01F5               	clrf	delay_x24o25us@i+1
  3350     0374  2B7D               	goto	l1265
  3351     0375                     l1261:
  3352     0375  300F               	movlw	15
  3353     0376  3182  22F6  3183   	fcall	_delay_x1o5us
  3354     0379                     l1263:
  3355     0379  3001               	movlw	1
  3356     037A  07F4               	addwf	delay_x24o25us@i,f
  3357     037B  3000               	movlw	0
  3358     037C  3DF5               	addwfc	delay_x24o25us@i+1,f
  3359     037D                     l1265:
  3360     037D  0873               	movf	delay_x24o25us@delay+1,w
  3361     037E  0275               	subwf	delay_x24o25us@i+1,w
  3362     037F  1D03               	skipz
  3363     0380  2B83               	goto	u575
  3364     0381  0872               	movf	delay_x24o25us@delay,w
  3365     0382  0274               	subwf	delay_x24o25us@i,w
  3366     0383                     u575:
  3367     0383  1C03               	skipc
  3368     0384  2B86               	goto	u571
  3369     0385  2B87               	goto	u570
  3370     0386                     u571:
  3371     0386  2B75               	goto	l1261
  3372     0387                     u570:
  3373     0387                     l78:
  3374     0387  0008               	return
  3375     0388                     __end_of_delay_x24o25us:
  3376                           
  3377                           	psect	text20
  3378     03CE                     __ptext20:	
  3379 ;; *************** function _lcd_Goto *****************
  3380 ;; Defined at:
  3381 ;;		line 180 in file "program.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  y               1    wreg     unsigned char 
  3384 ;;  x               1    6[COMMON] unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  y               1    7[COMMON] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3396 ;;      Params:         1       0       0       0       0       0       0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0
  3399 ;;      Totals:         2       0       0       0       0       0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 5
  3403 ;; This function calls:
  3404 ;;		_lcd_PrintCmd
  3405 ;; This function is called by:
  3406 ;;		_programInitialize
  3407 ;;		_programLoop
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411     03CE                     _lcd_Goto:	
  3412                           ;psect for function _lcd_Goto
  3413                           
  3414                           
  3415                           ;incstack = 0
  3416                           ; Regs used in _lcd_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3417                           ;lcd_Goto@y stored from wreg
  3418     03CE  00F7               	movwf	lcd_Goto@y
  3419     03CF                     l1391:
  3420                           
  3421                           ;program.c: 181:     switch(y) {
  3422     03CF  2BE2               	goto	l1401
  3423     03D0                     l1393:
  3424                           
  3425                           ;program.c: 183:             lcd_PrintCmd(0x80 + x);
  3426     03D0  0876               	movf	lcd_Goto@x,w
  3427     03D1  3E80               	addlw	128
  3428     03D2  3182  22C9  3183   	fcall	_lcd_PrintCmd
  3429                           
  3430                           ;program.c: 184:             break;
  3431     03D5  2BEA               	goto	l122
  3432     03D6                     l1395:
  3433                           
  3434                           ;program.c: 187:             lcd_PrintCmd(0xC0 + x);
  3435     03D6  0876               	movf	lcd_Goto@x,w
  3436     03D7  3EC0               	addlw	192
  3437     03D8  3182  22C9  3183   	fcall	_lcd_PrintCmd
  3438                           
  3439                           ;program.c: 188:             break;
  3440     03DB  2BEA               	goto	l122
  3441     03DC                     l1397:
  3442                           
  3443                           ;program.c: 191:             lcd_PrintCmd(0x80 + x);
  3444     03DC  0876               	movf	lcd_Goto@x,w
  3445     03DD  3E80               	addlw	128
  3446     03DE  3182  22C9  3183   	fcall	_lcd_PrintCmd
  3447                           
  3448                           ;program.c: 192:             break;
  3449     03E1  2BEA               	goto	l122
  3450     03E2                     l1401:
  3451     03E2  0877               	movf	lcd_Goto@y,w
  3452                           
  3453                           ; Switch size 1, requested type "simple"
  3454                           ; Number of cases is 2, Range of values is 0 to 1
  3455                           ; switch strategies available:
  3456                           ; Name         Instructions Cycles
  3457                           ; simple_byte            7     4 (average)
  3458                           ; direct_byte           10     6 (fixed)
  3459                           ; jumptable            260     6 (fixed)
  3460                           ;	Chosen strategy is simple_byte
  3461     03E3  3A00               	xorlw	0	; case 0
  3462     03E4  1903               	skipnz
  3463     03E5  2BD0               	goto	l1393
  3464     03E6  3A01               	xorlw	1	; case 1
  3465     03E7  1903               	skipnz
  3466     03E8  2BD6               	goto	l1395
  3467     03E9  2BDC               	goto	l1397
  3468     03EA                     l122:
  3469     03EA  0008               	return
  3470     03EB                     __end_of_lcd_Goto:
  3471                           
  3472                           	psect	text21
  3473     02C9                     __ptext21:	
  3474 ;; *************** function _lcd_PrintCmd *****************
  3475 ;; Defined at:
  3476 ;;		line 148 in file "program.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  command         1    wreg     unsigned char 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  command         1    5[COMMON] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3490 ;;      Params:         0       0       0       0       0       0       0       0
  3491 ;;      Locals:         1       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0
  3493 ;;      Totals:         1       0       0       0       0       0       0       0
  3494 ;;Total ram usage:        1 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 4
  3497 ;; This function calls:
  3498 ;;		_lcd_DelaySetupTime
  3499 ;;		_lcd_WriteData
  3500 ;; This function is called by:
  3501 ;;		_lcd_Initialize
  3502 ;;		_lcd_Goto
  3503 ;;		_lcd_ClearAll
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507     02C9                     _lcd_PrintCmd:	
  3508                           ;psect for function _lcd_PrintCmd
  3509                           
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _lcd_PrintCmd: [wreg+status,2+status,0+pclath+cstack]
  3513                           ;lcd_PrintCmd@command stored from wreg
  3514     02C9  00F5               	movwf	lcd_PrintCmd@command
  3515     02CA                     l1287:
  3516                           
  3517                           ;program.c: 149:     LATBbits.LATB5 = 0;
  3518     02CA  0022               	movlb	2	; select bank2
  3519     02CB  128D               	bcf	13,5	;volatile
  3520     02CC                     l1289:
  3521                           
  3522                           ;program.c: 150:     lcd_DelaySetupTime();
  3523     02CC  3182  22AC  3182   	fcall	_lcd_DelaySetupTime
  3524                           
  3525                           ;program.c: 152:     lcd_WriteData(command);
  3526     02CF  0875               	movf	lcd_PrintCmd@command,w
  3527     02D0  3185  254F  3182   	fcall	_lcd_WriteData
  3528     02D3                     l108:
  3529     02D3  0008               	return
  3530     02D4                     __end_of_lcd_PrintCmd:
  3531                           
  3532                           	psect	text22
  3533     054F                     __ptext22:	
  3534 ;; *************** function _lcd_WriteData *****************
  3535 ;; Defined at:
  3536 ;;		line 127 in file "program.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  data            1    wreg     unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  data            1    4[COMMON] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3550 ;;      Params:         0       0       0       0       0       0       0       0
  3551 ;;      Locals:         1       0       0       0       0       0       0       0
  3552 ;;      Temps:          2       0       0       0       0       0       0       0
  3553 ;;      Totals:         3       0       0       0       0       0       0       0
  3554 ;;Total ram usage:        3 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 3
  3557 ;; This function calls:
  3558 ;;		_delay_x1o5us
  3559 ;;		_lcd_EPulse
  3560 ;; This function is called by:
  3561 ;;		_lcd_PrintCmd
  3562 ;;		_lcd_PrintChar
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566     054F                     _lcd_WriteData:	
  3567                           ;psect for function _lcd_WriteData
  3568                           
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _lcd_WriteData: [wreg+status,2+status,0+pclath+cstack]
  3572                           ;lcd_WriteData@data stored from wreg
  3573     054F  00F4               	movwf	lcd_WriteData@data
  3574     0550                     l1243:
  3575                           
  3576                           ;program.c: 129:     LATCbits.LATC5 = (data >> 7) & 0x01;
  3577     0550  0874               	movf	lcd_WriteData@data,w
  3578     0551  00F2               	movwf	??_lcd_WriteData
  3579     0552  3007               	movlw	7
  3580     0553                     u505:
  3581     0553  36F2               	lsrf	??_lcd_WriteData,f
  3582     0554  0B89               	decfsz	9,f
  3583     0555  2D53               	goto	u505
  3584     0556  0872               	movf	??_lcd_WriteData,w
  3585     0557  3901               	andlw	1
  3586     0558  00F3               	movwf	??_lcd_WriteData+1
  3587     0559  0EF3               	swapf	??_lcd_WriteData+1,f
  3588     055A  0DF3               	rlf	??_lcd_WriteData+1,f
  3589     055B  0022               	movlb	2	; select bank2
  3590     055C  080E               	movf	14,w	;volatile
  3591     055D  0673               	xorwf	??_lcd_WriteData+1,w
  3592     055E  39DF               	andlw	-33
  3593     055F  0673               	xorwf	??_lcd_WriteData+1,w
  3594     0560  008E               	movwf	14	;volatile
  3595                           
  3596                           ;program.c: 130:     LATBbits.LATB1 = (data >> 6) & 0x01;
  3597     0561  0874               	movf	lcd_WriteData@data,w
  3598     0562  00F2               	movwf	??_lcd_WriteData
  3599     0563  3006               	movlw	6
  3600     0564                     u515:
  3601     0564  36F2               	lsrf	??_lcd_WriteData,f
  3602     0565  0B89               	decfsz	9,f
  3603     0566  2D64               	goto	u515
  3604     0567  0872               	movf	??_lcd_WriteData,w
  3605     0568  3901               	andlw	1
  3606     0569  00F3               	movwf	??_lcd_WriteData+1
  3607     056A  0DF3               	rlf	??_lcd_WriteData+1,f
  3608     056B  080D               	movf	13,w	;volatile
  3609     056C  0673               	xorwf	??_lcd_WriteData+1,w
  3610     056D  39FD               	andlw	-3
  3611     056E  0673               	xorwf	??_lcd_WriteData+1,w
  3612     056F  008D               	movwf	13	;volatile
  3613                           
  3614                           ;program.c: 131:     LATBbits.LATB2 = (data >> 5) & 0x01;
  3615     0570  0874               	movf	lcd_WriteData@data,w
  3616     0571  00F2               	movwf	??_lcd_WriteData
  3617     0572  3005               	movlw	5
  3618     0573                     u525:
  3619     0573  36F2               	lsrf	??_lcd_WriteData,f
  3620     0574  0B89               	decfsz	9,f
  3621     0575  2D73               	goto	u525
  3622     0576  0872               	movf	??_lcd_WriteData,w
  3623     0577  3901               	andlw	1
  3624     0578  00F3               	movwf	??_lcd_WriteData+1
  3625     0579  0DF3               	rlf	??_lcd_WriteData+1,f
  3626     057A  0DF3               	rlf	??_lcd_WriteData+1,f
  3627     057B  080D               	movf	13,w	;volatile
  3628     057C  0673               	xorwf	??_lcd_WriteData+1,w
  3629     057D  39FB               	andlw	-5
  3630     057E  0673               	xorwf	??_lcd_WriteData+1,w
  3631     057F  008D               	movwf	13	;volatile
  3632                           
  3633                           ;program.c: 132:     LATBbits.LATB3 = (data >> 4) & 0x01;
  3634     0580  0874               	movf	lcd_WriteData@data,w
  3635     0581  00F2               	movwf	??_lcd_WriteData
  3636     0582  3004               	movlw	4
  3637     0583                     u535:
  3638     0583  36F2               	lsrf	??_lcd_WriteData,f
  3639     0584  0B89               	decfsz	9,f
  3640     0585  2D83               	goto	u535
  3641     0586  0872               	movf	??_lcd_WriteData,w
  3642     0587  3901               	andlw	1
  3643     0588  00F3               	movwf	??_lcd_WriteData+1
  3644     0589  0DF3               	rlf	??_lcd_WriteData+1,f
  3645     058A  0DF3               	rlf	??_lcd_WriteData+1,f
  3646     058B  0DF3               	rlf	??_lcd_WriteData+1,f
  3647     058C  080D               	movf	13,w	;volatile
  3648     058D  0673               	xorwf	??_lcd_WriteData+1,w
  3649     058E  39F7               	andlw	-9
  3650     058F  0673               	xorwf	??_lcd_WriteData+1,w
  3651     0590  008D               	movwf	13	;volatile
  3652     0591                     l1245:
  3653                           
  3654                           ;program.c: 134:     lcd_EPulse();
  3655     0591  3182  22BE  3185   	fcall	_lcd_EPulse
  3656     0594                     l1247:
  3657                           
  3658                           ;program.c: 137:     LATCbits.LATC5 = (data >> 3) & 0x01;
  3659     0594  0874               	movf	lcd_WriteData@data,w
  3660     0595  00F2               	movwf	??_lcd_WriteData
  3661     0596  3003               	movlw	3
  3662     0597                     u545:
  3663     0597  36F2               	lsrf	??_lcd_WriteData,f
  3664     0598  0B89               	decfsz	9,f
  3665     0599  2D97               	goto	u545
  3666     059A  0872               	movf	??_lcd_WriteData,w
  3667     059B  3901               	andlw	1
  3668     059C  00F3               	movwf	??_lcd_WriteData+1
  3669     059D  0EF3               	swapf	??_lcd_WriteData+1,f
  3670     059E  0DF3               	rlf	??_lcd_WriteData+1,f
  3671     059F  0022               	movlb	2	; select bank2
  3672     05A0  080E               	movf	14,w	;volatile
  3673     05A1  0673               	xorwf	??_lcd_WriteData+1,w
  3674     05A2  39DF               	andlw	-33
  3675     05A3  0673               	xorwf	??_lcd_WriteData+1,w
  3676     05A4  008E               	movwf	14	;volatile
  3677     05A5                     l1249:
  3678                           
  3679                           ;program.c: 138:     LATBbits.LATB1 = (data >> 2) & 0x01;
  3680     05A5  0874               	movf	lcd_WriteData@data,w
  3681     05A6  00F2               	movwf	??_lcd_WriteData
  3682     05A7  3002               	movlw	2
  3683     05A8                     u555:
  3684     05A8  36F2               	lsrf	??_lcd_WriteData,f
  3685     05A9  0B89               	decfsz	9,f
  3686     05AA  2DA8               	goto	u555
  3687     05AB  0872               	movf	??_lcd_WriteData,w
  3688     05AC  3901               	andlw	1
  3689     05AD  00F3               	movwf	??_lcd_WriteData+1
  3690     05AE  0DF3               	rlf	??_lcd_WriteData+1,f
  3691     05AF  080D               	movf	13,w	;volatile
  3692     05B0  0673               	xorwf	??_lcd_WriteData+1,w
  3693     05B1  39FD               	andlw	-3
  3694     05B2  0673               	xorwf	??_lcd_WriteData+1,w
  3695     05B3  008D               	movwf	13	;volatile
  3696     05B4                     l1251:
  3697                           
  3698                           ;program.c: 139:     LATBbits.LATB2 = (data >> 1) & 0x01;
  3699     05B4  0874               	movf	lcd_WriteData@data,w
  3700     05B5  00F2               	movwf	??_lcd_WriteData
  3701     05B6  3001               	movlw	1
  3702     05B7                     u565:
  3703     05B7  36F2               	lsrf	??_lcd_WriteData,f
  3704     05B8  0B89               	decfsz	9,f
  3705     05B9  2DB7               	goto	u565
  3706     05BA  0872               	movf	??_lcd_WriteData,w
  3707     05BB  3901               	andlw	1
  3708     05BC  00F3               	movwf	??_lcd_WriteData+1
  3709     05BD  0DF3               	rlf	??_lcd_WriteData+1,f
  3710     05BE  0DF3               	rlf	??_lcd_WriteData+1,f
  3711     05BF  080D               	movf	13,w	;volatile
  3712     05C0  0673               	xorwf	??_lcd_WriteData+1,w
  3713     05C1  39FB               	andlw	-5
  3714     05C2  0673               	xorwf	??_lcd_WriteData+1,w
  3715     05C3  008D               	movwf	13	;volatile
  3716     05C4                     l1253:
  3717                           
  3718                           ;program.c: 140:     LATBbits.LATB3 = data & 0x01;
  3719     05C4  0874               	movf	lcd_WriteData@data,w
  3720     05C5  3901               	andlw	1
  3721     05C6  00F2               	movwf	??_lcd_WriteData
  3722     05C7  0DF2               	rlf	??_lcd_WriteData,f
  3723     05C8  0DF2               	rlf	??_lcd_WriteData,f
  3724     05C9  0DF2               	rlf	??_lcd_WriteData,f
  3725     05CA  080D               	movf	13,w	;volatile
  3726     05CB  0672               	xorwf	??_lcd_WriteData,w
  3727     05CC  39F7               	andlw	-9
  3728     05CD  0672               	xorwf	??_lcd_WriteData,w
  3729     05CE  008D               	movwf	13	;volatile
  3730     05CF                     l1255:
  3731                           
  3732                           ;program.c: 142:     lcd_EPulse();
  3733     05CF  3182  22BE  3185   	fcall	_lcd_EPulse
  3734     05D2                     l1257:
  3735                           
  3736                           ;program.c: 144:     delay_x1o5us(30);
  3737     05D2  301E               	movlw	30
  3738     05D3  3182  22F6  3185   	fcall	_delay_x1o5us
  3739     05D6                     l105:
  3740     05D6  0008               	return
  3741     05D7                     __end_of_lcd_WriteData:
  3742                           
  3743                           	psect	text23
  3744     02BE                     __ptext23:	
  3745 ;; *************** function _lcd_EPulse *****************
  3746 ;; Defined at:
  3747 ;;		line 119 in file "program.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3761 ;;      Params:         0       0       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 2
  3768 ;; This function calls:
  3769 ;;		_lcd_DelayPulse
  3770 ;; This function is called by:
  3771 ;;		_lcd_WriteData
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775     02BE                     _lcd_EPulse:	
  3776                           ;psect for function _lcd_EPulse
  3777                           
  3778     02BE                     l1235:	
  3779                           ;incstack = 0
  3780                           ; Regs used in _lcd_EPulse: [wreg+status,2+status,0+pclath+cstack]
  3781                           
  3782                           
  3783                           ;program.c: 120:     LATBbits.LATB4 = 1;
  3784     02BE  0022               	movlb	2	; select bank2
  3785     02BF  160D               	bsf	13,4	;volatile
  3786     02C0                     l1237:
  3787                           
  3788                           ;program.c: 121:     lcd_DelayPulse();
  3789     02C0  3182  22B1  3182   	fcall	_lcd_DelayPulse
  3790     02C3                     l1239:
  3791                           
  3792                           ;program.c: 123:     LATBbits.LATB4 = 0;
  3793     02C3  0022               	movlb	2	; select bank2
  3794     02C4  120D               	bcf	13,4	;volatile
  3795                           
  3796                           ;program.c: 124:     lcd_DelayPulse();
  3797     02C5  3182  22B1  3182   	fcall	_lcd_DelayPulse
  3798     02C8                     l102:
  3799     02C8  0008               	return
  3800     02C9                     __end_of_lcd_EPulse:
  3801                           
  3802                           	psect	text24
  3803     02B1                     __ptext24:	
  3804 ;; *************** function _lcd_DelayPulse *****************
  3805 ;; Defined at:
  3806 ;;		line 114 in file "program.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3820 ;;      Params:         0       0       0       0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; Hardware stack levels required when called: 1
  3827 ;; This function calls:
  3828 ;;		_delay_x1o5us
  3829 ;; This function is called by:
  3830 ;;		_lcd_EPulse
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834     02B1                     _lcd_DelayPulse:	
  3835                           ;psect for function _lcd_DelayPulse
  3836                           
  3837     02B1                     l1233:	
  3838                           ;incstack = 0
  3839                           ; Regs used in _lcd_DelayPulse: [wreg+status,2+status,0+pclath+cstack]
  3840                           
  3841                           
  3842                           ;program.c: 116:     delay_x1o5us(200);
  3843     02B1  30C8               	movlw	200
  3844     02B2  3182  22F6  3182   	fcall	_delay_x1o5us
  3845     02B5                     l99:
  3846     02B5  0008               	return
  3847     02B6                     __end_of_lcd_DelayPulse:
  3848                           
  3849                           	psect	text25
  3850     02AC                     __ptext25:	
  3851 ;; *************** function _lcd_DelaySetupTime *****************
  3852 ;; Defined at:
  3853 ;;		line 109 in file "program.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, pclath, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3867 ;;      Params:         0       0       0       0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 1
  3874 ;; This function calls:
  3875 ;;		_delay_x1o5us
  3876 ;; This function is called by:
  3877 ;;		_lcd_PrintCmd
  3878 ;;		_lcd_PrintChar
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882     02AC                     _lcd_DelaySetupTime:	
  3883                           ;psect for function _lcd_DelaySetupTime
  3884                           
  3885     02AC                     l1241:	
  3886                           ;incstack = 0
  3887                           ; Regs used in _lcd_DelaySetupTime: [wreg+status,2+status,0+pclath+cstack]
  3888                           
  3889                           
  3890                           ;program.c: 111:     delay_x1o5us(200);
  3891     02AC  30C8               	movlw	200
  3892     02AD  3182  22F6  3182   	fcall	_delay_x1o5us
  3893     02B0                     l96:
  3894     02B0  0008               	return
  3895     02B1                     __end_of_lcd_DelaySetupTime:
  3896                           
  3897                           	psect	text26
  3898     0447                     __ptext26:	
  3899 ;; *************** function _i2c_Initialize *****************
  3900 ;; Defined at:
  3901 ;;		line 283 in file "program.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  fosc            4    0[BANK0 ] unsigned long 
  3904 ;;  baudrate        2    4[BANK0 ] unsigned short 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3916 ;;      Params:         0       6       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0
  3918 ;;      Temps:          0       4       0       0       0       0       0       0
  3919 ;;      Totals:         0      10       0       0       0       0       0       0
  3920 ;;Total ram usage:       10 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 1
  3923 ;; This function calls:
  3924 ;;		___lldiv
  3925 ;;		_delay_x1o5us
  3926 ;; This function is called by:
  3927 ;;		_programInitialize
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931     0447                     _i2c_Initialize:	
  3932                           ;psect for function _i2c_Initialize
  3933                           
  3934     0447                     l1463:	
  3935                           ;incstack = 0
  3936                           ; Regs used in _i2c_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3937                           
  3938                           
  3939                           ;program.c: 284:     SSPSTATbits.SMP = 1;
  3940     0447  0024               	movlb	4	; select bank4
  3941     0448  1794               	bsf	20,7	;volatile
  3942     0449                     l1465:
  3943                           
  3944                           ;program.c: 286:     SSPCON1bits.SSPM = 8;
  3945     0449  0815               	movf	21,w	;volatile
  3946     044A  39F0               	andlw	-16
  3947     044B  3808               	iorlw	8
  3948     044C  0095               	movwf	21	;volatile
  3949     044D                     l1467:
  3950                           
  3951                           ;program.c: 288:     SSPCON3bits.SDAHT = 0;
  3952     044D  1197               	bcf	23,3	;volatile
  3953     044E                     l1469:
  3954                           
  3955                           ;program.c: 290:     if(baudrate>2223) baudrate = 2223;
  3956     044E  3008               	movlw	8
  3957     044F  0020               	movlb	0	; select bank0
  3958     0450  0225               	subwf	i2c_Initialize@baudrate+1,w
  3959     0451  30B0               	movlw	176
  3960     0452  1903               	skipnz
  3961     0453  0224               	subwf	i2c_Initialize@baudrate,w
  3962     0454  1C03               	skipc
  3963     0455  2C57               	goto	u881
  3964     0456  2C58               	goto	u880
  3965     0457                     u881:
  3966     0457  2C5D               	goto	l1473
  3967     0458                     u880:
  3968     0458                     l1471:
  3969     0458  30AF               	movlw	175
  3970     0459  00A4               	movwf	i2c_Initialize@baudrate
  3971     045A  3008               	movlw	8
  3972     045B  00A5               	movwf	i2c_Initialize@baudrate+1
  3973     045C  2C6A               	goto	l1477
  3974     045D                     l1473:
  3975     045D  3004               	movlw	4
  3976     045E  0225               	subwf	i2c_Initialize@baudrate+1,w
  3977     045F  3059               	movlw	89
  3978     0460  1903               	skipnz
  3979     0461  0224               	subwf	i2c_Initialize@baudrate,w
  3980     0462  1803               	skipnc
  3981     0463  2C65               	goto	u891
  3982     0464  2C66               	goto	u890
  3983     0465                     u891:
  3984     0465  2C6A               	goto	l1477
  3985     0466                     u890:
  3986     0466                     l1475:
  3987     0466  3059               	movlw	89
  3988     0467  00A4               	movwf	i2c_Initialize@baudrate
  3989     0468  3004               	movlw	4
  3990     0469  00A5               	movwf	i2c_Initialize@baudrate+1
  3991     046A                     l1477:
  3992                           
  3993                           ;program.c: 292:     SSPADD = (uint8_t)((fosc/baudrate) / 4 - 1);
  3994     046A  0824               	movf	i2c_Initialize@baudrate,w
  3995     046B  00F0               	movwf	___lldiv@divisor
  3996     046C  0825               	movf	i2c_Initialize@baudrate+1,w
  3997     046D  00F1               	movwf	___lldiv@divisor+1
  3998     046E  01F2               	clrf	___lldiv@divisor+2
  3999     046F  01F3               	clrf	___lldiv@divisor+3
  4000     0470  0823               	movf	i2c_Initialize@fosc+3,w
  4001     0471  00F7               	movwf	___lldiv@dividend+3
  4002     0472  0822               	movf	i2c_Initialize@fosc+2,w
  4003     0473  00F6               	movwf	___lldiv@dividend+2
  4004     0474  0821               	movf	i2c_Initialize@fosc+1,w
  4005     0475  00F5               	movwf	___lldiv@dividend+1
  4006     0476  0820               	movf	i2c_Initialize@fosc,w
  4007     0477  00F4               	movwf	___lldiv@dividend
  4008     0478  3184  2495  3184   	fcall	___lldiv
  4009     047B  0870               	movf	?___lldiv,w
  4010     047C  0020               	movlb	0	; select bank0
  4011     047D  00A6               	movwf	??_i2c_Initialize
  4012     047E  0871               	movf	?___lldiv+1,w
  4013     047F  00A7               	movwf	??_i2c_Initialize+1
  4014     0480  0872               	movf	?___lldiv+2,w
  4015     0481  00A8               	movwf	??_i2c_Initialize+2
  4016     0482  0873               	movf	?___lldiv+3,w
  4017     0483  00A9               	movwf	??_i2c_Initialize+3
  4018     0484  3002               	movlw	2
  4019     0485                     u905:
  4020     0485  36A9               	lsrf	??_i2c_Initialize+3,f
  4021     0486  0CA8               	rrf	??_i2c_Initialize+2,f
  4022     0487  0CA7               	rrf	??_i2c_Initialize+1,f
  4023     0488  0CA6               	rrf	??_i2c_Initialize,f
  4024     0489                     u900:
  4025     0489  0B89               	decfsz	9,f
  4026     048A  2C85               	goto	u905
  4027     048B  0826               	movf	??_i2c_Initialize,w
  4028     048C  3EFF               	addlw	255
  4029     048D  0024               	movlb	4	; select bank4
  4030     048E  0092               	movwf	18	;volatile
  4031     048F                     l1479:
  4032                           
  4033                           ;program.c: 294:     SSPCON1bits.SSPEN = 1;
  4034     048F  1695               	bsf	21,5	;volatile
  4035     0490                     l1481:
  4036                           
  4037                           ;program.c: 296:     delay_x1o5us(2);
  4038     0490  3002               	movlw	2
  4039     0491  3182  22F6  3184   	fcall	_delay_x1o5us
  4040     0494                     l161:
  4041     0494  0008               	return
  4042     0495                     __end_of_i2c_Initialize:
  4043                           
  4044                           	psect	text27
  4045     02F6                     __ptext27:	
  4046 ;; *************** function _delay_x1o5us *****************
  4047 ;; Defined at:
  4048 ;;		line 5 in file "program.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  delay           1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  delay           1    0[COMMON] unsigned char 
  4053 ;;  i               1    1[COMMON] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4063 ;;      Params:         0       0       0       0       0       0       0       0
  4064 ;;      Locals:         2       0       0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0
  4066 ;;      Totals:         2       0       0       0       0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_main
  4073 ;;		_delay_x24o25us
  4074 ;;		_lcd_DelaySetupTime
  4075 ;;		_lcd_DelayPulse
  4076 ;;		_lcd_WriteData
  4077 ;;		_i2c_Initialize
  4078 ;;		_i2c_MasterStop
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082     02F6                     _delay_x1o5us:	
  4083                           ;psect for function _delay_x1o5us
  4084                           
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  4088                           ;delay_x1o5us@delay stored from wreg
  4089     02F6  00F0               	movwf	delay_x1o5us@delay
  4090     02F7                     l1227:
  4091                           
  4092                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  4093     02F7  01F1               	clrf	delay_x1o5us@i
  4094     02F8  2AFC               	goto	l1231
  4095     02F9                     l70:
  4096     02F9  0000               	nop
  4097     02FA                     l1229:
  4098     02FA  3001               	movlw	1
  4099     02FB  07F1               	addwf	delay_x1o5us@i,f
  4100     02FC                     l1231:
  4101     02FC  0870               	movf	delay_x1o5us@delay,w
  4102     02FD  0271               	subwf	delay_x1o5us@i,w
  4103     02FE  1C03               	skipc
  4104     02FF  2B01               	goto	u491
  4105     0300  2B02               	goto	u490
  4106     0301                     u491:
  4107     0301  2AF9               	goto	l70
  4108     0302                     u490:
  4109     0302                     l72:
  4110     0302  0008               	return
  4111     0303                     __end_of_delay_x1o5us:
  4112                           
  4113                           	psect	text28
  4114     0495                     __ptext28:	
  4115 ;; *************** function ___lldiv *****************
  4116 ;; Defined at:
  4117 ;;		line 5 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__lldiv.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  divisor         4    0[COMMON] unsigned long 
  4120 ;;  dividend        4    4[COMMON] unsigned long 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  quotient        4    8[COMMON] unsigned long 
  4123 ;;  counter         1   12[COMMON] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  4    0[COMMON] unsigned long 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4133 ;;      Params:         8       0       0       0       0       0       0       0
  4134 ;;      Locals:         5       0       0       0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0
  4136 ;;      Totals:        13       0       0       0       0       0       0       0
  4137 ;;Total ram usage:       13 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_i2c_Initialize
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146     0495                     ___lldiv:	
  4147                           ;psect for function ___lldiv
  4148                           
  4149     0495                     l1325:	
  4150                           ;incstack = 0
  4151                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4152                           
  4153     0495  3000               	movlw	0
  4154     0496  00FB               	movwf	___lldiv@quotient+3
  4155     0497  3000               	movlw	0
  4156     0498  00FA               	movwf	___lldiv@quotient+2
  4157     0499  3000               	movlw	0
  4158     049A  00F9               	movwf	___lldiv@quotient+1
  4159     049B  3000               	movlw	0
  4160     049C  00F8               	movwf	___lldiv@quotient
  4161     049D  0873               	movf	___lldiv@divisor+3,w
  4162     049E  0472               	iorwf	___lldiv@divisor+2,w
  4163     049F  0471               	iorwf	___lldiv@divisor+1,w
  4164     04A0  0470               	iorwf	___lldiv@divisor,w
  4165     04A1  1903               	skipnz
  4166     04A2  2CA4               	goto	u641
  4167     04A3  2CA5               	goto	u640
  4168     04A4                     u641:
  4169     04A4  2CE4               	goto	l1345
  4170     04A5                     u640:
  4171     04A5                     l1327:
  4172     04A5  3001               	movlw	1
  4173     04A6  00FC               	movwf	___lldiv@counter
  4174     04A7  2CB1               	goto	l1331
  4175     04A8                     l1329:
  4176     04A8  3001               	movlw	1
  4177     04A9                     u655:
  4178     04A9  35F0               	lslf	___lldiv@divisor,f
  4179     04AA  0DF1               	rlf	___lldiv@divisor+1,f
  4180     04AB  0DF2               	rlf	___lldiv@divisor+2,f
  4181     04AC  0DF3               	rlf	___lldiv@divisor+3,f
  4182     04AD  0B89               	decfsz	9,f
  4183     04AE  2CA9               	goto	u655
  4184     04AF  3001               	movlw	1
  4185     04B0  07FC               	addwf	___lldiv@counter,f
  4186     04B1                     l1331:
  4187     04B1  1FF3               	btfss	___lldiv@divisor+3,7
  4188     04B2  2CB4               	goto	u661
  4189     04B3  2CB5               	goto	u660
  4190     04B4                     u661:
  4191     04B4  2CA8               	goto	l1329
  4192     04B5                     u660:
  4193     04B5                     l1333:
  4194     04B5  3001               	movlw	1
  4195     04B6                     u675:
  4196     04B6  35F8               	lslf	___lldiv@quotient,f
  4197     04B7  0DF9               	rlf	___lldiv@quotient+1,f
  4198     04B8  0DFA               	rlf	___lldiv@quotient+2,f
  4199     04B9  0DFB               	rlf	___lldiv@quotient+3,f
  4200     04BA  0B89               	decfsz	9,f
  4201     04BB  2CB6               	goto	u675
  4202     04BC                     l1335:
  4203     04BC  0873               	movf	___lldiv@divisor+3,w
  4204     04BD  0277               	subwf	___lldiv@dividend+3,w
  4205     04BE  1D03               	skipz
  4206     04BF  2CCA               	goto	u685
  4207     04C0  0872               	movf	___lldiv@divisor+2,w
  4208     04C1  0276               	subwf	___lldiv@dividend+2,w
  4209     04C2  1D03               	skipz
  4210     04C3  2CCA               	goto	u685
  4211     04C4  0871               	movf	___lldiv@divisor+1,w
  4212     04C5  0275               	subwf	___lldiv@dividend+1,w
  4213     04C6  1D03               	skipz
  4214     04C7  2CCA               	goto	u685
  4215     04C8  0870               	movf	___lldiv@divisor,w
  4216     04C9  0274               	subwf	___lldiv@dividend,w
  4217     04CA                     u685:
  4218     04CA  1C03               	skipc
  4219     04CB  2CCD               	goto	u681
  4220     04CC  2CCE               	goto	u680
  4221     04CD                     u681:
  4222     04CD  2CD7               	goto	l1341
  4223     04CE                     u680:
  4224     04CE                     l1337:
  4225     04CE  0870               	movf	___lldiv@divisor,w
  4226     04CF  02F4               	subwf	___lldiv@dividend,f
  4227     04D0  0871               	movf	___lldiv@divisor+1,w
  4228     04D1  3BF5               	subwfb	___lldiv@dividend+1,f
  4229     04D2  0872               	movf	___lldiv@divisor+2,w
  4230     04D3  3BF6               	subwfb	___lldiv@dividend+2,f
  4231     04D4  0873               	movf	___lldiv@divisor+3,w
  4232     04D5  3BF7               	subwfb	___lldiv@dividend+3,f
  4233     04D6                     l1339:
  4234     04D6  1478               	bsf	___lldiv@quotient,0
  4235     04D7                     l1341:
  4236     04D7  3001               	movlw	1
  4237     04D8                     u695:
  4238     04D8  36F3               	lsrf	___lldiv@divisor+3,f
  4239     04D9  0CF2               	rrf	___lldiv@divisor+2,f
  4240     04DA  0CF1               	rrf	___lldiv@divisor+1,f
  4241     04DB  0CF0               	rrf	___lldiv@divisor,f
  4242     04DC  0B89               	decfsz	9,f
  4243     04DD  2CD8               	goto	u695
  4244     04DE                     l1343:
  4245     04DE  3001               	movlw	1
  4246     04DF  02FC               	subwf	___lldiv@counter,f
  4247     04E0  1D03               	btfss	3,2
  4248     04E1  2CE3               	goto	u701
  4249     04E2  2CE4               	goto	u700
  4250     04E3                     u701:
  4251     04E3  2CB5               	goto	l1333
  4252     04E4                     u700:
  4253     04E4                     l1345:
  4254     04E4  087B               	movf	___lldiv@quotient+3,w
  4255     04E5  00F3               	movwf	?___lldiv+3
  4256     04E6  087A               	movf	___lldiv@quotient+2,w
  4257     04E7  00F2               	movwf	?___lldiv+2
  4258     04E8  0879               	movf	___lldiv@quotient+1,w
  4259     04E9  00F1               	movwf	?___lldiv+1
  4260     04EA  0878               	movf	___lldiv@quotient,w
  4261     04EB  00F0               	movwf	?___lldiv
  4262     04EC                     l380:
  4263     04EC  0008               	return
  4264     04ED                     __end_of___lldiv:
  4265     0001                     ___latbits      equ	1
  4266     007E                     btemp           set	126	;btemp
  4267     007E                     wtemp0          set	126
  4268                           
  4269                           	psect	config
  4270                           
  4271                           ;Config register CONFIG1 @ 0x8007
  4272                           ;	Oscillator Selection
  4273                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  4274                           ;	Watchdog Timer Enable
  4275                           ;	WDTE = OFF, WDT disabled
  4276                           ;	Power-up Timer Enable
  4277                           ;	PWRTE = OFF, PWRT disabled
  4278                           ;	MCLR Pin Function Select
  4279                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4280                           ;	Flash Program Memory Code Protection
  4281                           ;	CP = OFF, Program memory code protection is disabled
  4282                           ;	Data Memory Code Protection
  4283                           ;	CPD = OFF, Data memory code protection is disabled
  4284                           ;	Brown-out Reset Enable
  4285                           ;	BOREN = OFF, Brown-out Reset disabled
  4286                           ;	Clock Out Enable
  4287                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  4288                           ;	Internal/External Switchover
  4289                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4290                           ;	Fail-Safe Clock Monitor Enable
  4291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4292     8007                     	org	32775
  4293     8007  01E2               	dw	482
  4294                           
  4295                           ;Config register CONFIG2 @ 0x8008
  4296                           ;	Flash Memory Self-Write Protection
  4297                           ;	WRT = OFF, Write protection off
  4298                           ;	Voltage Regulator Capacitor Enable bit
  4299                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  4300                           ;	PLL Enable
  4301                           ;	PLLEN = ON, 4x PLL enabled
  4302                           ;	Stack Overflow/Underflow Reset Enable
  4303                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4304                           ;	Brown-out Reset Voltage Selection
  4305                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4306                           ;	Low Power Brown-Out Reset Enable Bit
  4307                           ;	LPBOR = 0x1, unprogrammed default
  4308                           ;	In-Circuit Debugger Mode
  4309                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  4310                           ;	Low-Voltage Programming Enable
  4311                           ;	LVP = ON, Low-voltage programming enabled
  4312     8008                     	org	32776
  4313     8008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      45
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    lcd_PrintString@string	PTR unsigned char  size(2) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), STR_1(CODE[11]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 


Critical Paths under _main in COMMON

    _main->_delay_ms
    _programLoop->_delay_ms
    _i2c_MasterStop->_delay_x24o25us
    _lcd_PrintDigitInt32->___aldiv
    _lcd_PrintString->_lcd_PrintChar
    _lcd_PrintChar->_lcd_WriteData
    _lcd_Initialize->_delay_ms
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us
    _lcd_Goto->_lcd_PrintCmd
    _lcd_PrintCmd->_lcd_WriteData
    _lcd_WriteData->_delay_x1o5us
    _lcd_DelayPulse->_delay_x1o5us
    _lcd_DelaySetupTime->_delay_x1o5us
    _i2c_Initialize->___lldiv

Critical Paths under _main in BANK0

    _main->_programLoop
    _programLoop->_lcd_PrintDigitInt32
    _programInitialize->_lcd_PrintDigitInt32

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7577
                           _delay_ms
                       _delay_x1o5us
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          4     4      0    3274
                                             41 BANK0      4     4      0
                           _delay_ms
            _i2c_MasterByteReadSlave
           _i2c_MasterByteWriteSlave
                           _lcd_Goto
                _lcd_PrintDigitInt32
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterByteWriteSlave                             2     1      1     226
                                              6 COMMON     2     1      1
                    _i2c_MasterStart
                     _i2c_MasterStop
                    _i2c_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterByteReadSlave                              2     2      0     254
                                              6 COMMON     2     2      0
                     _i2c_MasterRead
                    _i2c_MasterStart
                     _i2c_MasterStop
                    _i2c_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _i2c_MasterWrite                                      1     1      0      15
                                              0 COMMON     1     1      0
                        _i2c_BusIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_MasterStop                                       0     0      0     156
                       _delay_x1o5us
                     _delay_x24o25us
                        _i2c_BusIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_MasterStart                                      0     0      0       0
                        _i2c_BusIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_MasterRead                                       2     2      0      30
                                              0 COMMON     2     2      0
                        _i2c_BusIdle
 ---------------------------------------------------------------------------------
 (4) _i2c_BusIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0    4094
                     _i2c_Initialize
                           _lcd_Goto
                     _lcd_Initialize
                _lcd_PrintDigitInt32
                    _lcd_PrintString
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintDigitInt32                                 41    34      7    2117
                                              0 BANK0     41    34      7
                            ___aldiv
                             ___bmul
            _i2c_MasterByteReadSlave (ARG)
                               _labs
                      _lcd_PrintChar
                    _lcd_PrintString
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     108
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintString                                      3     1      2     468
                                              6 COMMON     3     1      2
                      _lcd_PrintChar
 ---------------------------------------------------------------------------------
 (4) _lcd_PrintChar                                        1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (3) _labs                                                 4     0      4      68
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     109
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_Initialize                                       0     0      0     679
                           _delay_ms
                     _delay_x24o25us
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             8     4      4     156
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (4) _delay_x24o25us                                       4     2      2     103
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (2) _lcd_Goto                                             2     1      1     521
                                              6 COMMON     2     1      1
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintCmd                                         1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (5) _lcd_WriteData                                        3     3      0     338
                                              2 COMMON     3     3      0
                       _delay_x1o5us
                         _lcd_EPulse
 ---------------------------------------------------------------------------------
 (6) _lcd_EPulse                                           0     0      0      53
                     _lcd_DelayPulse
 ---------------------------------------------------------------------------------
 (7) _lcd_DelayPulse                                       0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (5) _lcd_DelaySetupTime                                   0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (2) _i2c_Initialize                                      10     4      6     309
                                              0 BANK0     10     4      6
                            ___lldiv
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (8) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     164
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     _delay_x24o25us
       _delay_x1o5us
   _delay_x1o5us
   _programInitialize
     _i2c_Initialize
       ___lldiv
       _delay_x1o5us
     _lcd_Goto
       _lcd_PrintCmd
         _lcd_DelaySetupTime
           _delay_x1o5us
         _lcd_WriteData
           _delay_x1o5us
           _lcd_EPulse
             _lcd_DelayPulse
               _delay_x1o5us
     _lcd_Initialize
       _delay_ms
       _delay_x24o25us
       _lcd_PrintCmd
     _lcd_PrintDigitInt32
       ___aldiv
       ___bmul
       _i2c_MasterByteReadSlave (ARG)
         _i2c_MasterRead
           _i2c_BusIdle
         _i2c_MasterStart
           _i2c_BusIdle
         _i2c_MasterStop
           _delay_x1o5us
           _delay_x24o25us
           _i2c_BusIdle
         _i2c_MasterWrite
           _i2c_BusIdle
       _labs (ARG)
       _lcd_PrintChar (ARG)
         _lcd_DelaySetupTime
         _lcd_WriteData
       _lcd_PrintString (ARG)
         _lcd_PrintChar
       _memset (ARG)
     _lcd_PrintString
   _programLoop
     _delay_ms
     _i2c_MasterByteReadSlave
     _i2c_MasterByteWriteSlave
       _i2c_MasterStart
       _i2c_MasterStop
       _i2c_MasterWrite
     _lcd_Goto
     _lcd_PrintDigitInt32

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     45      45     56.2%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      59      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 19 17:55:39 2024

                  ??_lcd_PrintCmd 0075                    ___bmul@product 0071          _i2c_MasterByteWriteSlave 0303  
                     _SSPSTATbits 0214                _lcd_DelaySetupTime 02AC                                l70 02F9  
                              l72 0302                                l90 0728                                l84 0413  
                              l78 0387                                l87 054E                                l96 02B0  
                              l99 02B5                   ??_lcd_PrintChar 0075                     ??_i2c_BusIdle 0070  
                             l102 02C8                               l111 0446                               l105 05D6  
                             l122 03EA                               l131 039E                               l108 02D3  
                             l125 02DE                               l143 0752                               l161 0494  
                             l170 02E9                               l155 07FC                               l182 02F5  
                             l167 02BD                               l191 0312                               l176 0323  
                             l409 05E9                               l185 033D                               l370 0336  
                             l194 035C                               l419 0661                               l179 02F1  
                             l380 04EC                               l188 0349                               l813 03B5  
                             l901 02E2                               l807 0371                               l911 02E8  
                             l903 02E4                               l921 0338                               l905 02E5  
                             l931 0348                               l923 0338                               l907 02E6  
                             l861 02B6                               l925 033B                               l909 02E7  
                             l917 02EB                               l927 0341                               l919 02EE  
                             l929 0343                               l859 02B6                               l899 02DF  
                             u100 02BD                               u101 02BC                               u150 02F5  
                             u151 02F4                               u160 0341                               u161 0340  
                             u600 03B5                               u505 0553                               u601 03B4  
                             u610 0361                               u515 0564                               u611 0360  
                             u700 04E4                               u620 032A                               u701 04E3  
                             u525 0573                               u621 0329                               u710 05DC  
                             u630 0335                               u535 0583                               u711 05DB  
                             u631 0334                               u640 04A5                               u800 064E  
                             u720 05ED                               u641 04A4                               u545 0597  
                             u801 064D                               u721 05EC                               u490 0302  
                             u570 0387                               u730 060A                               u810 0749  
                             u491 0301                               u555 05A8                               u571 0386  
                             u731 0609                               u811 0748                               u660 04B5  
                             u900 0489                               u580 0413                               u820 074E  
                             u661 04B4                               u565 05B7                               u581 0412  
                             u821 074D                               u750 061A                               u590 039E  
                             u830 076D                               u655 04A9                               u575 0383  
                             u751 0619                               u591 039D                               u831 076C  
                             u680 04CE                               u840 07B0                               u681 04CD  
                             u905 0485                               u585 040F                               u745 060E  
                             u841 07AF                               u770 0633                               u850 07BA  
                             u675 04B6                               u771 0632                               u851 07B9  
                             u860 07DB                               u685 04CA                               u765 061B  
                             u861 07DA                               u790 0649                               u870 07E4  
                             u695 04D8                               u791 0648                               u775 062F  
                             u871 07E3                               u880 0458                               u881 0457  
                             u785 063D                               u865 07D7                               u890 0466  
                             u891 0465               ?_lcd_DelaySetupTime 0070                               wreg 0009  
             _lcd_PrintDigitInt32 0729                              l1301 0361                              l1231 02FC  
                            l1311 0325                              l1303 0362                              l1241 02AC  
                            l1233 02B1                              l1401 03E2                              l1321 0335  
                            l1313 0326                              l1331 04B1                              l1227 02F7  
                            l1235 02BE                              l1251 05B4                              l1243 0550  
                            l1315 032A                              l1411 0749                              l1403 0729  
                            l1307 0313                              l1341 04D7                              l1333 04B5  
                            l1325 0495                              l1229 02FA                              l1237 02C0  
                            l1253 05C4                              l1245 0591                              l1261 0375  
                            l1317 032C                              l1421 077A                              l1413 074E  
                            l1405 072C                              l1501 0519                              l1309 0316  
                            l1343 04DE                              l1335 04BC                              l1327 04A5  
                            l1239 02C3                              l1255 05CF                              l1247 0594  
                            l1263 0379                              l1271 03EB                              l1351 05D8  
                            l1319 032E                              l1431 07B0                              l1423 0796  
                            l1415 0768                              l1407 0738                              l1511 053E  
                            l1503 051C                              l1337 04CE                              l1329 04A8  
                            l1345 04E4                              l1257 05D2                              l1249 05A5  
                            l1265 037D                              l1273 03F4                              l1361 0602  
                            l1353 05DC                              l1281 0389                              l1441 07C3  
                            l1433 07B2                              l1425 079F                              l1417 076D  
                            l1409 0744                              l1505 0521                              l1521 0682  
                            l1513 0662                              l1339 04D6                              l1259 0372  
                            l1275 03FB                              l1371 0621                              l1363 060A  
                            l1355 05ED                              l1267 02D5                              l1283 0391  
                            l1291 039F                              l1435 07B4                              l1443 07C6  
                            l1427 07A6                              l1419 0771                              l1507 0528  
                            l1531 06E0                              l1523 069B                              l1515 0664  
                            l1277 0401                              l1373 0633                              l1365 060D  
                            l1381 0649                              l1357 05F8                              l1349 05D7  
                            l1269 02D7                              l1285 0395                              l1293 03A2  
                            l1461 07F5                              l1453 07E5                              l1445 07DB  
                            l1437 07BA                              l1429 07A8                              l1509 052D  
                            l1533 06E5                              l1525 06A1                              l1517 067B  
                            l1541 03C5                              l1471 0458                              l1463 0447  
                            l1287 02CA                              l1391 03CF                              l1383 064E  
                            l1375 063B                              l1367 0616                              l1359 05FA  
                            l1279 0388                              l1295 03A7                              l1455 07F0  
                            l1447 07DE                              l1439 07BF                              l1535 06FE  
                            l1527 06C5                              l1519 067D                              l1543 03C8  
                            l1481 0490                              l1473 045D                              l1465 0449  
                            l1289 02CC                              l1393 03D0                              l1385 0659  
                            l1377 063C                              l1369 061A                              l1297 03A9  
                            l1457 07F2                              l1449 07DF                              l1537 0704  
                            l1529 06DE                              l1475 0466                              l1467 044D  
                            l1395 03D6                              l1379 0643                              l1299 035D  
                            l1491 0353                              l1483 0304                              l1539 03B6  
                            l1477 046A                              l1469 044E                              l1397 03DC  
                            l1389 0414                              l1493 0358                              l1485 034B  
                            l1479 048F                              l1495 035B                              l1487 034B  
                            l1489 034E                              l1499 04ED                              STR_1 0800  
                 ??_lcd_WriteData 0072                              _labs 035D                              _main 03B6  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E              ??_lcd_DelaySetupTime 0072                              start 0002  
       ??_i2c_MasterByteReadSlave 0076              ?_lcd_PrintDigitInt32 0020                 ___bmul@multiplier 0072  
            __end_of_delay_x1o5us 0303                 ??_lcd_PrintString 0078                   __end_of___aldiv 0662  
                           ?_labs 0070                             ?_main 0070                   __end_of___lldiv 04ED  
             __end_of_i2c_BusIdle 02BE                             labs@a 0070               delay_x24o25us@delay 0072  
                           status 0003                             wtemp0 007E             ??_lcd_PrintDigitInt32 0027  
                 __initialization 07FD                      __end_of_labs 0372                      __end_of_main 03CE  
                          ??_labs 0074                            ??_main 007E          lcd_PrintDigitInt32@tempC 0045  
        lcd_PrintDigitInt32@tempN 0041              __end_of_lcd_PrintCmd 02D4                            _SSPADD 0212  
                          _SSPBUF 0211                  __end_of_delay_ms 0414                 delay_x1o5us@delay 0070  
                __end_of_lcd_Goto 03EB                i2c_MasterRead@data 0071                            ___bmul 0324  
                       ??___aldiv 0078                         ??___lldiv 0078                  ??_i2c_MasterRead 0070  
                ??_i2c_MasterStop 0076                  ??_i2c_Initialize 0026                            _memset 039F  
                  _delay_x24o25us 0372                       _i2c_BusIdle 02B6            lcd_PrintChar@character 0075  
         __end_of__initialization 07FD     lcd_PrintDigitInt32@numberChar 0036                      ?_programLoop 0070  
      ??_i2c_MasterByteWriteSlave 0077               ___bmul@multiplicand 0070                    __pcstackCOMMON 0070  
              i2c_Initialize@fosc 0020               lcd_PrintCmd@command 0075            __end_of_delay_x24o25us 0388  
   lcd_PrintDigitInt32@totalDigit 0047                      _delay_x1o5us 02F6                 _programInitialize 04ED  
                 _lcd_PrintString 0388                        __pmaintext 03B6                ?_programInitialize 0070  
          i2c_Initialize@baudrate 0024                           ?___bmul 0070                        _lcd_EPulse 02BE  
                 ?_delay_x24o25us 0072                           ?_memset 0070               ??_programInitialize 007E  
           __end_of_lcd_PrintChar 02DF   i2c_MasterByteWriteSlave@addrDev 0077                         ?_delay_ms 0076  
                       ?_lcd_Goto 0076                           _SSPCON2 0216         __end_of_programInitialize 054F  
           __end_of_lcd_WriteData 05D7             lcd_PrintDigitInt32@i1 0048             lcd_PrintDigitInt32@i2 0046  
                         ___aldiv 05D7                           ___lldiv 0495                      _lcd_PrintCmd 02C9  
                         __ptext1 0662                           __ptext2 0303                           __ptext3 034A  
                         __ptext4 02EA                           __ptext5 0313                           __ptext6 02DF  
                         __ptext7 0337                           __ptext8 02B6                           __ptext9 04ED  
               ??_i2c_MasterStart 0070                 ??_i2c_MasterWrite 0070                  ___aldiv@dividend 0074  
                      ??_delay_ms 007A                        ??_lcd_Goto 0077              end_of_initialization 07FD  
         __end_of_lcd_PrintString 039F        lcd_PrintDigitInt32@noDigit 0024       __end_of_lcd_PrintDigitInt32 07FD  
        ?_i2c_MasterByteReadSlave 0070                           memset@c 0071                           memset@n 0073  
                         memset@p 0075                   ___lldiv@divisor 0070                   ___lldiv@counter 007C  
                ___aldiv@quotient 007A                       ?_lcd_EPulse 0070                      ?_i2c_BusIdle 0070  
                       _TRISAbits 008C                         _TRISBbits 008D                         _TRISCbits 008E  
                  _lcd_DelayPulse 02B1                     delay_x1o5us@i 0071                    __end_of___bmul 0337  
                   delay_ms@delay 0076               i2c_MasterWrite@byte 0070                    __end_of_memset 03B6  
          __end_of_lcd_DelayPulse 02B6               start_initialization 07FD   __end_of_i2c_MasterByteReadSlave 035D  
                ?_lcd_PrintString 0076  lcd_PrintDigitInt32@numberRevChar 002B                    _lcd_Initialize 0414  
                ??_delay_x24o25us 0074                 i2c_MasterRead@ack 0070                          ??___bmul 0071  
                        ??_memset 0075                        memset@dest 0070         ?_i2c_MasterByteWriteSlave 0076  
                 ?_lcd_DelayPulse 0070                         ___latbits 0001                     __pcstackBANK0 0020  
          __end_of_lcd_Initialize 0447                   _i2c_MasterStart 02DF                   _i2c_MasterWrite 02EA  
                        ?___aldiv 0070                          ?___lldiv 0070                   ?_lcd_Initialize 0070  
                 ___aldiv@divisor 0070        __end_of_lcd_DelaySetupTime 02B1                   ___aldiv@counter 0078  
                        _LATBbits 010D                          _LATCbits 010E                         delay_ms@i 007A  
                    ??_lcd_EPulse 0072                         lcd_Goto@x 0076                         lcd_Goto@y 0077  
               lcd_WriteData@data 0074           __end_of_i2c_MasterStart 02EA           __end_of_i2c_MasterWrite 02F6  
              __end_of_lcd_EPulse 02C9                     ??_programLoop 0049      i2c_MasterByteWriteSlave@data 0076  
                      _APFCONbits 011D                        _ANSELAbits 018C                        _ANSELBbits 018D  
                   _lcd_PrintChar 02D4                    _i2c_MasterRead 0337                    _i2c_MasterStop 0313  
                  _i2c_Initialize 0447                          _delay_ms 03EB                          __ptext10 0729  
                        __ptext11 039F                          __ptext20 03CE                          __ptext12 0388  
                        __ptext21 02C9                          __ptext13 02D4                          __ptext22 054F  
                        __ptext14 035D                          __ptext23 02BE                          __ptext15 0324  
                        __ptext24 02B1                          __ptext16 05D7                          __ptext25 02AC  
                        __ptext17 0414                          __ptext26 0447                          __ptext18 03EB  
                        __ptext27 02F6                          __ptext19 0372                          _lcd_Goto 03CE  
                        __ptext28 0495                     ?_delay_x1o5us 0070                     _lcd_WriteData 054F  
__end_of_i2c_MasterByteWriteSlave 0313               __end_of_programLoop 0729                  ??_lcd_DelayPulse 0072  
          __end_of_i2c_MasterRead 034A            __end_of_i2c_MasterStop 0324            __end_of_i2c_Initialize 0495  
                  ?_lcd_PrintChar 0070    i2c_MasterByteReadSlave@addrDev 0076                    ??_delay_x1o5us 0070  
                ?_i2c_MasterStart 0070                  ?_i2c_MasterWrite 0070                  ___lldiv@dividend 0074  
                  ?_lcd_WriteData 0070         lcd_PrintDigitInt32@enSign 0025         lcd_PrintDigitInt32@enZero 0026  
       lcd_PrintDigitInt32@number 0020           _i2c_MasterByteReadSlave 034A       i2c_MasterByteReadSlave@data 0077  
                 delay_x24o25us@i 0074                     ?_lcd_PrintCmd 0070                     __pstringtext1 0800  
                   __pstringtext2 0000                   ?_i2c_MasterRead 0070                   ?_i2c_MasterStop 0070  
                 ?_i2c_Initialize 0020                  ___lldiv@quotient 0078                      ___aldiv@sign 0079  
                ??_lcd_Initialize 007E                       _SSPCON1bits 0215                       _SSPCON2bits 0216  
                     _SSPCON3bits 0217             lcd_PrintString@string 0076                       _programLoop 0662  
